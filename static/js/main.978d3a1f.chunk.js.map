{"version":3,"sources":["redux/Layout/layout.types.js","redux/Scenarios/scenarios.types.js","redux/Notification/notification.types.js","redux/Notification/notification.reducer.js","redux/Thesaurus/thesaurus.types.js","redux/BlockEditor/blockEditor.types.js","redux/BlockEditor/blockEditor.reducer.js","redux/rootReducer.js","redux/Layout/layout.reducer.js","redux/Scenarios/scenarios.reducer.js","redux/Thesaurus/thesaurus.reducer.js","constants.js","routing.js","api/index.js","redux/Notification/notification.actions.js","redux/Layout/layout.actions.js","redux/Scenarios/scenarios.actions.js","redux/Thesaurus/thesaurus.actions.js","ui/Notification/Notification.js","ui/Menu/Menu.style.js","ui/Menu/Menu.js","components/Header/Header.style.js","components/Header/Header.js","ui/LeftDrawer/LeftDrawer.style.js","ui/LeftDrawer/LeftDrawer.js","ui/AddDialog/AddDialog.js","pages/AdminPage/components/AdminSidebar/AdminSidebar.js","api/content.js","ui/Slider/Slider.js","pages/LayoutEditorPage/components/LayoutEditor/LayoutEditor.js","helpers.js","api/monitoring.js","hooks/useGaze.js","hooks/useAutoScroll.js","redux/BlockEditor/blockEditor.actions.js","pages/LayoutEditorPage/components/Grid/Grid.style.js","pages/LayoutEditorPage/components/Grid/Grid.js","pages/ScenarioEditorPage/components/BlockActions/BlockActions.style.js","pages/ScenarioEditorPage/components/BlockActions/BlockActions.js","components/Image/Image.js","ui/SplittedText/SplittedText.js","ui/TextAlert/TextAlert.style.js","ui/TextAlert/TextAlert.js","ui/TermCard/TermCard.style.js","ui/TermCard/TermCard.js","components/Block/Block.style.js","components/Text/Text.style.js","components/Text/Text.js","components/TextImageHorizontal/TextImageHorizontal.js","components/TextImageVertical/TextImageVertical.js","ui/FadeInContainer/FadeInContainer.js","components/Block/Block.js","components/BlocksGroup/BlocksGroup.style.js","components/BlocksGroup/BlocksGroup.js","components/Content/Content.style.js","components/Content/Content.js","components/ContentContainer/ContentContainer.style.js","components/ContentContainer/ContentContainer.js","pages/ScenarioEditorPage/components/AddBlockDialog/AddBlockDialog.style.js","pages/ScenarioEditorPage/components/AddBlockDialog/AddBlockDialog.js","components/Scenario/Scenario.js","pages/LayoutEditorPage/LayoutEditorPage.js","pages/ScenarioEditorPage/components/ScenarioEditor/ScenarioEditor.js","pages/ScenarioEditorPage/components/BlockEditor/BlockEditor.js","pages/ScenarioEditorPage/ScenarioEditorPage.js","pages/ThesaurusPage/components/ThesaurusSidebar/ThesaurusSidebar.js","ui/UpdateDialog/UpdateDialog.js","pages/ThesaurusPage/components/Terms/Terms.style.js","pages/ThesaurusPage/components/Terms/Terms.js","pages/ThesaurusPage/ThesaurusPage.js","pages/MonitoringRecordPage/components/MonitoringRecordSidebar/MonitoringRecordSidebar.js","pages/MonitoringRecordPage/components/MonitoringCanvas/MonitoringCanvas.js","pages/MonitoringRecordPage/MonitoringRecordPage.style.js","pages/MonitoringRecordPage/MonitoringRecordPage.js","pages/AdminPage/AdminPage.js","pages/ScenariosPage/ScenariosPage.style.js","pages/ScenariosPage/ScenariosPage.js","theme.js","components/App/App.js","index.js"],"names":["FETCH_LAYOUT","UPDATE_LAYOUT","TEMPORARY_SET_LAYOUT","FETCH_SCENARIOS","ADD_SCENARIO","DELETE_SCENARIO","UPDATE_SCENARIO","SHOW_NOTIFICATION","HIDE_NOTIFICATION","initialState","isOpened","severity","message","FETCH_THESAURUS","ADD_TERM","DELETE_TERM","UPDATE_TERM","TOGGLE_ADD_BLOCK_DIALOG","addBlockDialog","show","order","direction","rootReducer","combineReducers","layout","state","action","type","types","payload","scenarios","notification","thesaurus","blockEditor","GOLDEN_RATIO","GOLDEN_RATIO_BIG","SCENARIO_MODE","FORMAT_TAG","INFO","WARNING","ERROR","WORD_CLASS_NAME","TERM_CLASS_NAME","BLOCK_TYPE","SCENARIO_ID","BLOCK_ID","MONITORING_RECORD_ID","ROUTE_SCENARIOS","ROUTE_SCENARIO","ROUTE_ADMIN","ROUTE_LAYOUT_EDITOR","ROUTE_SCENARIO_EDITOR","getRouteToScenarioEditor","scenarioId","replace","ROUTE_BLOCK_EDITOR","getRouteToBlockEditor","blockId","ROUTE_THESAURUS","ROUTE_MONITORING_RECORD","STORAGE","window","localStorage","STORAGE_ITEM","LAYOUT","BLOCKS","SCENARIOS","THESAURUS","MONITORING","STORAGE_ITEM_INITIAL_VALUE","maxWidth","fontSize","lineHeight","grid","columnsNumber","columnGutter","focusLine","fontFamily","_getStorageItem","item","value","getItem","JSON","parse","_setStorageItem","setItem","stringify","Object","values","forEach","storageItem","getLayout","_getBlocks","getScenarioBlocks","scenario","filter","block","blocks","includes","id","_deleteBlockById","getScenarios","_getScenarioById","find","_saveScenarios","addScenario","title","newScenario","nanoid","deleteScenarioById","updateScenario","prevScenario","map","_block","_updateBlock","_addBlock","_scenario","getThesaurus","_saveThesaurus","addTerm","term","newTerm","updateTerm","_term","deleteTermById","_saveMonitoringRecords","monitoringRecords","showNotification","dispatch","fetchLayout","force","getState","api","updateLayout","_layout","saveLayout","getScenarioById","getTermErrors","errors","definition","keys","length","getTermById","Notification","useDispatch","notificationState","useSelector","onClose","e","reason","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","props","Slide","style","top","Alert","elevation","width","useStyles","makeStyles","theme","listItemIcon","minWidth","marginRight","spacing","Menu","anchorEl","children","history","useHistory","classes","keepMounted","transformOrigin","itemGroup","itemGroupIndex","visible","MenuItem","dense","onClick","to","push","icon","ListItemIcon","className","Divider","toolbar","padding","grow","flexGrow","button","marginLeft","color","background","Header","useState","setAnchorEl","menuItems","routing","AppBar","position","Toolbar","variant","Typography","noWrap","Button","size","component","Link","IconButton","edge","currentTarget","AccountCircle","drawer","zIndex","drawerPaper","drawerHeader","display","alignItems","fontWeight","drawerHeaderAdditional","marginTop","drawerItem","drawerItemTitle","marginBottom","drawerItemParam","slider","justifyContent","transform","sliderMarkLeft","sliderMarkRight","drawerItemParamSwitch","listItemWithButton","nestedListItem","info","listItem","LeftDrawer","header","Drawer","paper","anchor","backRoute","Close","saveButton","onSave","disabled","renderAdditional","renderHeader","AddDialog","onAdd","Dialog","fullWidth","DialogTitle","DialogContent","DialogActions","ADD_SCENARIO_DIALOG_INITIAL_STATE","STORAGE_DIALOG_INITIAL_STATE","file","AdminSidebar","addScenarioDialogState","setAddScenarioDialogState","storageDialogState","setStorageDialogState","isMonitoringExpanded","setIsMonitoringExpanded","setMonitoringRecords","useEffect","date","List","disablePadding","ListItem","ListItemText","primary","secondary","onStorageDialogClose","disableElevation","startIcon","CloudDownload","blob","Blob","reduce","storage","filename","Date","now","saveAs","accept","hidden","onChange","target","files","htmlFor","CloudUpload","fileReader","FileReader","onload","result","entries","readAsText","renderStorage","TextField","error","helperText","label","autoFocus","margin","required","Tooltip","placement","Add","Collapse","in","timeout","unmountOnExit","preventDefault","Remove","onToggleMonitoring","ExpandLess","ExpandMore","record","format","locale","ru","renderMonitoring","TEXT_PART_TYPE","_getQueryParamsString","params","searchParams","URLSearchParams","key","append","toString","getTermSynonyms","a","query","lang","text","axios","get","withCredentials","response","synonyms","Set","data","def","defs","tr","trs","syn","console","_areWordsEqual","w1","w2","w1Parts","split","w2Parts","partsNumber","Array","_","j","words","w","toLowerCase","sort","charsCounter","i","Boolean","splitTextIntoParts","weigh","matchAll","word","parts","pushPunctuation","index","wordLength","slice","limit","terms","synonym","b","_parts","num","checkCondition","part","every","partJoined","join","splice","maxWordLength","Math","max","Slider","step","marks","min","_marks","markIndex","_label","partIndex","getLabel","valueLabelDisplay","layoutParams","param","ATOM","LayoutEditor","isLayoutChanged","setIsLayoutChanged","initialLayoutRef","useRef","setInitialLayout","current","_isLayoutChanged","lodashGet","changedLayout","lodashSet","onLayoutParamChange","joinClasses","circleRectCollision","circle","rect","distX","abs","x","distY","y","h","r","dx","dy","pickKeysFromObject","obj","fromEntries","getAngleBetweenPoints","p1","p2","atan2","INITIAL_STATE","prevHoveredParts","gazePlot","STATE","initState","GAZE_INITIAL_VALUE","isMoving","useGaze","doMonitoring","gazeRef","webgazer","clearData","setGazeListener","setGazePosition","clientX","clientY","begin","clearGazeListener","end","stopVideo","gaze","onGazeMove","FOCUS_LINE_INITIAL_VALUE","cy","height","topY","bottomY","useAutoScroll","useTheme","contentContainer","setContentContainer","containerSupportRef","focusLineRef","getGazeSpaceBounds","getBoundingClientRect","newFocusLine","parseFloat","getTop","getFocusLine","getBottomLimit","isGazeInsideGazeSpace","scroll","getStep","round","bottomLimit","toggleAddBlockDialog","container","pointerEvents","column","getWidth","backgroundColor","outline","Grid","palette","main","boxShadow","shadows","light","BlockActions","canMoveUp","canMoveDown","blockActions","useParams","handleMenuClose","addBlock","Edit","ArrowUpward","moveUp","ArrowDownward","moveDown","Delete","delete","VerticalAlignTop","VerticalAlignBottom","MoreHoriz","Image","backgroundImage","image","src","backgroundSize","SplittedText","paragraphIndex","getTextPartClass","isPartTerm","isPartWord","undefined","getClassAndId","alert","TextAlert","card","content","TermCard","showMenu","splittedTextData","onTermDialogOpen","Card","CardHeader","subheader","Fragment","avatar","Avatar","School","CardContent","renderDefinition","titleFontSize","titleLineHeight","Text","parentType","cascade","blockClasses","useBlockStyles","textWidth","flex","alignSelf","p","pIndex","renderText","formatTag","TextImageHorizontal","TextImageVertical","FadeInBlock","modes","useInView","ref","inView","isVisible","setIsVisible","Block","getBlockComponent","flexWrap","BlocksGroup","allBlocksLength","autoScroll","blockIndex","isHighlightedBlock","isNotHighlightedBlock","el","previousSibling","childNodes","querySelector","Content","finishViewing","contentElement","setContentElement","blocksGroups","useMemo","groups","groupIndex","block_","blockWidth","currentGroup","onresize","blocksGroup","blocksGroupIndex","containerSupport","ContentContainer","containerWidth","expandTerms","getTermToExpand","getElementsByClassName","document","querySelectorAll","contentMarkup","left","termsToExpand","_gaze","getHoveredParts","partType","getMarkup","partId","hoveredTerms","hoveredWords","hoveredParts","isRecognized","fixations","prevHoveredPartIndex","findIndex","prevHoveredPart","duration","fixation","monitoringApi","useAnimationFrame","clientWidth","monitoringData","b1","b2","renderContent","name","Notes","VerticalSplit","HorizontalSplit","getRandomImageSrc","links","floor","random","AddBlockDialog","setScenarioBlocks","reorderedBlocks","onAddBlock","ListItemAvatar","Scenario","setBlocks","contentApi","splittedBlocks","blockText","_blocks","termId","splittedTerm","parseInt","getText","LayoutEditorPage","exampleScenario","ScenarioEditor","isScenarioChanged","setInitialScenario","setScenario","BlockEditor","onBlockParamChange","changedBlock","updateParams","AlertTitle","multiline","FormControl","InputLabel","Select","labelId","ScenarioEditorPage","initialScenario","scenario_","swapBlocks","block1","block2","blockBefore","blockAfter","renderSidebar","ThesaurusSidebar","UpdateDialog","onUpdate","cards","flexDirection","EMPTY_TERM","TERM_DIALOG_INITIAL_STATE","dialogType","TERM_DIALOG_TYPE","TERM_SYNONYM_OPTIONS_INITIAL_STATE","Terms","termDialogState","setTermDialogState","termSynonymOptions","setTermSynonymOptions","getTermSynonymOptions","getDebouncedTermSynonymOptions","useDebouncedCallback","onTermDialogClose","onTermDialogSynonymsChange","onTermDialogSynonymChange","areTermSynonymOptionsloading","isPending","renderTermDialogFields","cancel","onTermDialogTermChange","Autocomplete","multiple","inputValue","onInputChange","options","getOptionLabel","option","filterSelectedOptions","renderInput","InputProps","endAdornment","CircularProgress","onTermDialogDefinitionChange","Box","ThesaurusPage","MonitoringRecordSidebar","gazePlotLimit","isHeatmapVisible","setGazePlotLimit","setIsHeatmapVisible","FormControlLabel","control","Switch","checked","renderParams","GAZE_PLOT_CIRCLE","MonitoringCanvas","contentScreenshot","stage","setStage","heatmap","setHeatmap","heatmapInstance","h337","create","setData","_renderer","canvas","_gazePlot","stroke","strokeWidth","sceneFunc","c","shape","beginPath","prevGaze","angle","cos","sin","moveTo","lineTo","closePath","strokeShape","gazeIndex","radius","fill","renderGazePlot","canvasContainer","overflow","MonitoringRecordPage","monitoringRecordId","monitoringRecord","setMonitoringRecord","setContentScreenshot","_monitoringRecord","setTimeout","html2canvas","then","AdminPage","exact","path","root","ScenariosPage","justify","xs","createMuiTheme","default","snackbar","App","contentContainerSizes","setContentContainerSizes","contentWidthElement","contentHeightElement","ThemeProvider","getGutters","allGutters","columnWidth","gutters","CssBaseline","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.978d3a1f.chunk.js","sourcesContent":["export const FETCH_LAYOUT = 'FETCH_LAYOUT'\nexport const UPDATE_LAYOUT = 'UPDATE_LAYOUT'\nexport const TEMPORARY_SET_LAYOUT = 'TEMPORARY_SET_LAYOUT'\n","export const FETCH_SCENARIOS = 'FETCH_SCENARIOS'\nexport const ADD_SCENARIO = 'ADD_SCENARIO'\nexport const DELETE_SCENARIO = 'DELETE_SCENARIO'\nexport const UPDATE_SCENARIO = 'UPDATE_SCENARIO'\n","export const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION'\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION'\n","import * as types from './notification.types'\n\nconst initialState = {\n  isOpened: false,\n  severity: 'success',\n  message: null\n}\n\nexport const notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_NOTIFICATION:\n      return { ...action.payload, isOpened: true }\n    case types.HIDE_NOTIFICATION:\n      return initialState\n    default:\n      return state\n  }\n}\n","export const FETCH_THESAURUS = 'FETCH_THESAURUS'\nexport const ADD_TERM = 'ADD_TERM'\nexport const DELETE_TERM = 'DELETE_TERM'\nexport const UPDATE_TERM = 'UPDATE_TERM'\n","export const TOGGLE_ADD_BLOCK_DIALOG = 'TOGGLE_ADD_BLOCK_DIALOG'\n","import * as types from './blockEditor.types'\r\n\r\nconst initialState = {\r\n  addBlockDialog: {\r\n    show: false,\r\n    order: null,\r\n    direction: null\r\n  }\r\n}\r\n\r\nexport const blockEditorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_ADD_BLOCK_DIALOG:\r\n      return { ...state, addBlockDialog: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { layoutReducer as layout } from './Layout/layout.reducer'\r\nimport { scenariosReducer as scenarios } from './Scenarios/scenarios.reducer'\r\nimport { notificationReducer as notification } from './Notification/notification.reducer'\r\nimport { thesaurusReducer as thesaurus } from './Thesaurus/thesaurus.reducer'\r\nimport { blockEditorReducer as blockEditor } from './BlockEditor/blockEditor.reducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  layout,\r\n  scenarios,\r\n  notification,\r\n  thesaurus,\r\n  blockEditor\r\n})\r\n","import * as types from './layout.types'\n\nconst initialState = null\n\nexport const layoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_LAYOUT:\n    case types.UPDATE_LAYOUT:\n    case types.TEMPORARY_SET_LAYOUT:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import * as types from './scenarios.types'\n\nconst initialState = null\n\nexport const scenariosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_SCENARIOS:\n    case types.ADD_SCENARIO:\n    case types.DELETE_SCENARIO:\n    case types.UPDATE_SCENARIO:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import * as types from './thesaurus.types'\n\nconst initialState = null\n\nexport const thesaurusReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_THESAURUS:\n    case types.ADD_TERM:\n    case types.DELETE_TERM:\n    case types.UPDATE_TERM:\n      return action.payload\n    default:\n      return state\n  }\n}\n","export const GOLDEN_RATIO = 0.61803\nexport const GOLDEN_RATIO_BIG = GOLDEN_RATIO + 1\nexport const GOLDEN_RATIO_SMALL = 1 - GOLDEN_RATIO\n\nexport const ATOM = 8\n\nexport const SCENARIO_MODE = {\n  VIEW: 'view',\n  EDIT: 'edit',\n  EXAMPLE: 'example'\n}\n\nexport const FORMAT_TAG = {\n  INFO: '<info>',\n  WARNING: '<warning>',\n  ERROR: '<error>'\n}\n\nexport const WORD_CLASS_NAME = 'word'\nexport const TERM_CLASS_NAME = 'term'\n\nexport const BLOCK_TYPE = {\n  TEXT: 'text',\n  IMAGE: 'image',\n  TEXT_IMAGE_HORIZONTAL: 'text-image-horizontal',\n  TEXT_IMAGE_VERTICAL: 'text-image-vertical'\n}\n","const SCENARIO_ID = ':scenarioId'\nconst BLOCK_ID = ':blockId'\nconst MONITORING_RECORD_ID = ':monitoringRecordId'\n\nexport const ROUTE_ROOT = '/'\n\nexport const ROUTE_SCENARIOS = `${ROUTE_ROOT}scenarios`\nexport const ROUTE_SCENARIO = `${ROUTE_SCENARIOS}/${SCENARIO_ID}`\n\nexport const getRouteToScenario = scenarioId => {\n  return ROUTE_SCENARIO.replace(SCENARIO_ID, scenarioId)\n}\n\nexport const ROUTE_ADMIN = `${ROUTE_ROOT}admin`\n\nexport const ROUTE_LAYOUT_EDITOR = `${ROUTE_ADMIN}/layout-editor`\n\nexport const ROUTE_SCENARIO_EDITOR = `${ROUTE_ADMIN}/scenarios/:scenarioId`\n\nexport const getRouteToScenarioEditor = scenarioId => {\n  return ROUTE_SCENARIO_EDITOR.replace(SCENARIO_ID, scenarioId)\n}\n\nexport const ROUTE_BLOCK_EDITOR = `${ROUTE_SCENARIO_EDITOR}/block-editor/${BLOCK_ID}`\n\nexport const getRouteToBlockEditor = (scenarioId, blockId) => {\n  return ROUTE_BLOCK_EDITOR.replace(SCENARIO_ID, scenarioId).replace(\n    BLOCK_ID,\n    blockId\n  )\n}\n\nexport const ROUTE_THESAURUS = `${ROUTE_ADMIN}/thesaurus`\n\nexport const ROUTE_MONITORING_RECORD = `${ROUTE_ADMIN}/monitoring/${MONITORING_RECORD_ID}`\n\nexport const getRouteToMonitoringRecord = id => {\n  return ROUTE_MONITORING_RECORD.replace(MONITORING_RECORD_ID, id)\n}\n\n// export const ROUTE_USERS = `${ROUTE_ADMIN}/users`\n","import { nanoid } from 'nanoid'\n\nconst STORAGE = window.localStorage\n\nexport const STORAGE_ITEM = {\n  LAYOUT: 'LAYOUT',\n  BLOCKS: 'BLOCKS',\n  SCENARIOS: 'SCENARIOS',\n  THESAURUS: 'THESAURUS',\n  MONITORING: 'MONITORING'\n}\nexport const STORAGE_ITEM_INITIAL_VALUE = {\n  [STORAGE_ITEM.LAYOUT]: {\n    maxWidth: 1280,\n    fontSize: 14,\n    lineHeight: 24,\n    grid: {\n      columnsNumber: 12,\n      columnGutter: 24\n    },\n    focusLine: 10,\n    fontFamily: \"'Inter', sans-serif\"\n  },\n  [STORAGE_ITEM.BLOCKS]: [],\n  [STORAGE_ITEM.SCENARIOS]: [],\n  [STORAGE_ITEM.THESAURUS]: [],\n  [STORAGE_ITEM.MONITORING]: []\n}\n\nconst _getStorageItem = item => {\n  const value = STORAGE.getItem(item)\n\n  if (!value || value === '') {\n    return null\n  }\n\n  return JSON.parse(value)\n}\n\nconst _setStorageItem = (item, value) => {\n  STORAGE.setItem(item, JSON.stringify(value))\n}\n\nconst _initStorage = () => {\n  Object.values(STORAGE_ITEM).forEach(storageItem => {\n    const item = _getStorageItem(storageItem)\n\n    if (item) {\n      return\n    }\n\n    _setStorageItem(storageItem, STORAGE_ITEM_INITIAL_VALUE[storageItem])\n  })\n}\n\n_initStorage()\n\n/* STORAGE */\n\nexport const exportStorage = () => {\n  return JSON.stringify(\n    Object.values(STORAGE_ITEM).reduce((storage, storageItem) => {\n      storage[storageItem] = _getStorageItem(storageItem)\n      return storage\n    }, {})\n  )\n}\n\nexport const importStorage = storage => {\n  Object.entries(JSON.parse(storage)).forEach(([storageItem, value]) => {\n    _setStorageItem(storageItem, value)\n  })\n}\n\n/* LAYOUT */\n\nexport const getLayout = () => {\n  return _getStorageItem(STORAGE_ITEM.LAYOUT)\n}\n\nexport const updateLayout = layout => {\n  return _setStorageItem(STORAGE_ITEM.LAYOUT, layout)\n}\n\n/* BLOCKS */\n\nconst _getBlocks = () => {\n  return _getStorageItem(STORAGE_ITEM.BLOCKS)\n}\n\nexport const getScenarioBlocks = scenario => {\n  const blocks = _getBlocks()\n\n  return blocks.filter(block => {\n    return scenario.blocks.includes(block.id)\n  })\n}\n\n// const _doesBlockExist = id => {\n//   const blocks = _getBlocks()\n\n//   return !!blocks.find(block => {\n//     return block.id === id\n//   })\n// }\n\nconst _addBlock = block => {\n  const blocks = _getBlocks()\n\n  _setStorageItem(STORAGE_ITEM.BLOCKS, [...blocks, block])\n}\n\nconst _updateBlock = block => {\n  const blocks = _getBlocks()\n\n  _setStorageItem(\n    STORAGE_ITEM.BLOCKS,\n    blocks.map(_block => {\n      if (_block.id !== block.id) {\n        return _block\n      }\n\n      return block\n    })\n  )\n}\n\nconst _deleteBlockById = id => {\n  const blocks = _getBlocks()\n\n  _setStorageItem(\n    STORAGE_ITEM.BLOCKS,\n    blocks.filter(block => {\n      return block.id !== id\n    })\n  )\n}\n\n/* SCENARIOS */\n\nexport const getScenarios = () => {\n  return _getStorageItem(STORAGE_ITEM.SCENARIOS)\n}\n\nconst _getScenarioById = id => {\n  const scenarios = getScenarios()\n\n  return scenarios.find(scenario => {\n    return scenario.id === id\n  })\n}\n\nconst _saveScenarios = scenarios => {\n  _setStorageItem(STORAGE_ITEM.SCENARIOS, scenarios)\n\n  return scenarios\n}\n\nexport const addScenario = title => {\n  const scenarios = getScenarios()\n  const newScenario = {\n    id: nanoid(),\n    title,\n    blocks: []\n  }\n\n  return _saveScenarios([...scenarios, newScenario])\n}\n\nexport const deleteScenarioById = id => {\n  const scenarios = getScenarios()\n  const scenario = _getScenarioById(id)\n\n  scenario.blocks.forEach(blockId => {\n    _deleteBlockById(blockId)\n  })\n\n  return _saveScenarios(\n    scenarios.filter(scenario => {\n      return scenario.id !== id\n    })\n  )\n}\n\nexport const updateScenario = scenario => {\n  const scenarios = getScenarios()\n  const prevScenario = _getScenarioById(scenario.id)\n\n  // delete and update blocks\n  prevScenario.blocks.forEach(blockId => {\n    const block = scenario.blocks.find(block => {\n      return block.id === blockId\n    })\n\n    if (!block) {\n      _deleteBlockById(blockId)\n      return\n    }\n\n    _updateBlock(block)\n  })\n\n  // add new blocks\n  scenario.blocks.forEach(block => {\n    const isNewBlock = !prevScenario.blocks.find(blockId => {\n      return blockId === block.id\n    })\n\n    if (!isNewBlock) {\n      return\n    }\n\n    _addBlock(block)\n  })\n\n  return _saveScenarios(\n    scenarios.map(_scenario => {\n      if (_scenario.id !== scenario.id) {\n        return _scenario\n      }\n\n      return {\n        ...scenario,\n        blocks: scenario.blocks.map(block => {\n          return block.id\n        })\n      }\n    })\n  )\n}\n\n/* THESAURUS */\n\nexport const getThesaurus = () => {\n  return _getStorageItem(STORAGE_ITEM.THESAURUS)\n}\n\nconst _saveThesaurus = thesaurus => {\n  _setStorageItem(STORAGE_ITEM.THESAURUS, thesaurus)\n\n  return thesaurus\n}\n\nexport const addTerm = term => {\n  const thesaurus = getThesaurus()\n  const newTerm = {\n    ...term,\n    id: nanoid()\n  }\n\n  return _saveThesaurus([...thesaurus, newTerm])\n}\n\nexport const updateTerm = term => {\n  const thesaurus = getThesaurus()\n\n  return _saveThesaurus(\n    thesaurus.map(_term => {\n      if (_term.id !== term.id) {\n        return _term\n      }\n\n      return term\n    })\n  )\n}\n\nexport const deleteTermById = id => {\n  const thesaurus = getThesaurus()\n\n  return _saveThesaurus(\n    thesaurus.filter(term => {\n      return term.id !== id\n    })\n  )\n}\n\n/* MONITORING */\n\nexport const getMonitoringRecords = () => {\n  return _getStorageItem(STORAGE_ITEM.MONITORING).map(({ id, date }) => {\n    return { id, date }\n  })\n}\n\nexport const getMonitoringRecordById = id => {\n  const monitoringRecords = _getStorageItem(STORAGE_ITEM.MONITORING)\n\n  return monitoringRecords.find(record => {\n    return record.id === id\n  })\n}\n\nconst _saveMonitoringRecords = monitoringRecords => {\n  _setStorageItem(STORAGE_ITEM.MONITORING, monitoringRecords)\n\n  return monitoringRecords\n}\n\nexport const addMonitoringRecord = record => {\n  const monitoringRecords = _getStorageItem(STORAGE_ITEM.MONITORING)\n\n  _saveMonitoringRecords([...monitoringRecords, record])\n}\n\nexport const deleteMonitoringRecordById = id => {\n  const monitoringRecords = _getStorageItem(STORAGE_ITEM.MONITORING)\n\n  return _saveMonitoringRecords(\n    monitoringRecords.filter(record => {\n      return record.id !== id\n    })\n  )\n}\n\n/*\n\nPARAMS\n\ntype BlockParams = {\n  width: number\n}\n\ntype BlockImageParams = {\n  src: string\n  height: number\n  size: 'cover' | 'contain'\n}\n\nBLOCKS\n\ntype Block = {\n  id: string\n  order: number\n}\n\ntype BlockText = Block & {\n  type: 'text'\n  title: string\n  text: string[]\n  params: {\n    textWidth: number\n  }\n}\n\ntype BlockImage = Block & {\n  image: BlockImageParams\n}\n\nSCENARIO\n\ntype Scenario = {\n  id: string\n  title: string\n  blocks: Block[] \n}\n\n*/\n","import * as types from './notification.types'\n\nexport const showNotification = (severity, message) => dispatch => {\n  dispatch({ type: types.SHOW_NOTIFICATION, payload: { severity, message } })\n}\n\nexport const hideNotification = () => dispatch => {\n  dispatch({ type: types.HIDE_NOTIFICATION })\n}\n","import * as api from '../../api'\n\nimport * as types from './layout.types'\n\nimport { showNotification } from '../Notification/notification.actions'\n\nexport const fetchLayout =\n  (force = false) =>\n  (dispatch, getState) => {\n    const { layout } = getState()\n\n    if (layout && !force) {\n      return\n    }\n\n    dispatch({ type: types.FETCH_LAYOUT, payload: api.getLayout() })\n  }\n\nexport const updateLayout = _layout => (dispatch, getState) => {\n  const { layout } = getState()\n\n  if (JSON.stringify(layout) === JSON.stringify(_layout)) {\n    return\n  }\n\n  dispatch({ type: types.UPDATE_LAYOUT, payload: _layout })\n}\n\nexport const saveLayout = () => (dispatch, getState) => {\n  const { layout } = getState()\n\n  api.updateLayout(layout)\n  dispatch(showNotification('success', 'Параметры представления сохранены'))\n}\n\nexport const temporarySetLayout = layout => dispatch => {\n  dispatch({ type: types.TEMPORARY_SET_LAYOUT, payload: layout })\n}\n\nexport const resetLayout = () => dispatch => {\n  dispatch(fetchLayout(true))\n}\n","import * as api from '../../api'\n\nimport * as types from './scenarios.types'\n\nimport { showNotification } from '../Notification/notification.actions'\n\nexport const fetchScenarios = () => (dispatch, getState) => {\n  const { scenarios } = getState()\n\n  if (scenarios) {\n    return\n  }\n\n  dispatch({\n    type: types.FETCH_SCENARIOS,\n    payload: api.getScenarios()\n  })\n}\n\nexport const addScenario = title => dispatch => {\n  if (title === '') {\n    return {\n      errors: {\n        title: 'Введите название'\n      }\n    }\n  }\n\n  dispatch({\n    type: types.ADD_SCENARIO,\n    payload: api.addScenario(title)\n  })\n  dispatch(showNotification('success', `Сценарий \"${title}\" создан`))\n}\n\nexport const deleteScenario = id => dispatch => {\n  dispatch({\n    type: types.DELETE_SCENARIO,\n    payload: api.deleteScenarioById(id)\n  })\n  dispatch(showNotification('warning', `Сценарий ${id} удален`))\n}\n\nexport const updateScenario = scenario => dispatch => {\n  dispatch({\n    type: types.UPDATE_SCENARIO,\n    payload: api.updateScenario(scenario)\n  })\n  dispatch(showNotification('success', `Сценарий \"${scenario.title}\" сохранен`))\n}\n\nexport const getScenarioById = id => (dispatch, getState) => {\n  const { scenarios } = getState()\n\n  const scenario = scenarios.find(scenario => {\n    return scenario.id === id\n  })\n\n  if (!scenario) {\n    return undefined\n  }\n\n  return {\n    ...scenario,\n    blocks: api.getScenarioBlocks(scenario)\n  }\n}\n","import * as api from '../../api'\n\nimport * as types from './thesaurus.types'\n\nimport { showNotification } from '../Notification/notification.actions'\n\nexport const fetchThesaurus = () => (dispatch, getState) => {\n  const { thesaurus } = getState()\n\n  if (thesaurus) {\n    return\n  }\n\n  dispatch({\n    type: types.FETCH_THESAURUS,\n    payload: api.getThesaurus()\n  })\n}\n\nconst getTermErrors = term => {\n  const errors = {}\n\n  if (term.term === '') {\n    errors.term = 'Введите термин'\n  }\n\n  if (term.definition === '') {\n    errors.definition = 'Введите определение термина'\n  }\n\n  if (Object.keys(errors).length !== 0) {\n    return errors\n  }\n\n  return null\n}\n\nexport const addTerm = term => dispatch => {\n  const errors = getTermErrors(term)\n\n  if (errors) {\n    return { errors }\n  }\n\n  dispatch({\n    type: types.ADD_TERM,\n    payload: api.addTerm(term)\n  })\n  dispatch(showNotification('success', `Термин \"${term.term}\" добавлен`))\n}\n\nexport const deleteTerm = id => dispatch => {\n  dispatch({\n    type: types.DELETE_TERM,\n    payload: api.deleteTermById(id)\n  })\n  dispatch(showNotification('warning', `Термин ${id} удален`))\n}\n\nexport const updateTerm = term => dispatch => {\n  const errors = getTermErrors(term)\n\n  if (errors) {\n    return { errors }\n  }\n\n  dispatch({\n    type: types.UPDATE_TERM,\n    payload: api.updateTerm(term)\n  })\n  dispatch(showNotification('success', `Термин \"${term.term}\" изменен`))\n}\n\nexport const getTermById = id => (dispatch, getState) => {\n  const { thesaurus } = getState()\n\n  return thesaurus.find(term => {\n    return term.id === id\n  })\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Snackbar, Slide } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nimport { hideNotification } from '../../redux/Notification/notification.actions'\n\nconst Notification = () => {\n  const dispatch = useDispatch()\n  const notificationState = useSelector(state => state.notification)\n\n  const onClose = (e, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    dispatch(hideNotification())\n  }\n\n  const { isOpened, message, severity } = notificationState\n\n  if (!isOpened) {\n    return null\n  }\n\n  return (\n    <Snackbar\n      open={isOpened}\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      TransitionComponent={props => <Slide {...props} direction=\"left\" />}\n      onClose={onClose}\n      style={{\n        top: '64px'\n      }}\n    >\n      <Alert\n        severity={severity}\n        elevation={6}\n        onClose={onClose}\n        style={{ width: '100%' }}\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default Notification\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  listItemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2)\n  }\n}))\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Menu as MuiMenu,\n  Divider,\n  MenuItem,\n  ListItemIcon\n} from '@material-ui/core'\n\nimport { useStyles } from './Menu.style'\n\nconst Menu = props => {\n  const { anchorEl, children, onClose } = props\n\n  const history = useHistory()\n\n  const classes = useStyles()\n\n  const isOpened = !!anchorEl\n\n  return (\n    <MuiMenu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isOpened}\n      onClose={onClose}\n    >\n      {children.map((itemGroup, itemGroupIndex) => {\n        const renderDivider = () => {\n          if (itemGroupIndex === children.length - 1) {\n            return null\n          }\n\n          return <Divider />\n        }\n\n        const items = [\n          ...itemGroup.map(item => {\n            if (item.visible === false) {\n              return null\n            }\n\n            const onClick = () => {\n              onClose()\n\n              if (item.onClick) {\n                item.onClick()\n                return\n              }\n\n              if (item.to) {\n                history.push(item.to)\n                return\n              }\n            }\n\n            const renderIcon = () => {\n              if (!item.icon) {\n                return null\n              }\n\n              return (\n                <ListItemIcon className={classes.listItemIcon}>\n                  {item.icon}\n                </ListItemIcon>\n              )\n            }\n\n            return (\n              <MenuItem key={item.title} dense onClick={onClick}>\n                {renderIcon()}\n                {item.title}\n              </MenuItem>\n            )\n          }),\n          renderDivider()\n        ]\n\n        return items\n      })}\n    </MuiMenu>\n  )\n}\n\nexport default Menu\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  toolbar: {\n    padding: theme.spacing(0, 4),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(4),\n    padding: theme.spacing(1),\n    color: '#fff',\n    background: 'rgba(255, 255, 255, 0.2)',\n    lineHeight: 1,\n  },\n}));\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button\n} from '@material-ui/core'\nimport { AccountCircle } from '@material-ui/icons'\n\nimport * as routing from '../../routing'\n\nimport Menu from '../../ui/Menu'\n\nimport { useStyles } from './Header.style'\n\nconst Header = () => {\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleMenuOpen = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const menuItems = [\n    [\n      {\n        title: 'Профиль'\n      },\n      {\n        title: 'Администрирование',\n        to: routing.ROUTE_ADMIN\n      }\n    ]\n  ]\n\n  return (\n    <>\n      <AppBar position=\"static\" elevation={0}>\n        <Toolbar className={classes.toolbar} variant=\"dense\">\n          <Typography variant=\"body1\" noWrap>\n            Human Intelligent Reading\n          </Typography>\n          <Button\n            className={classes.button}\n            size=\"small\"\n            variant=\"text\"\n            component={Link}\n            to=\"/scenarios\"\n          >\n            Сценарии\n          </Button>\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" color=\"inherit\" onClick={handleMenuOpen}>\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Menu anchorEl={anchorEl} onClose={handleMenuClose}>\n        {menuItems}\n      </Menu>\n    </>\n  )\n}\n\nexport default Header\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: '400px',\r\n    zIndex: 9\r\n  },\r\n  drawerPaper: {\r\n    position: 'static'\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *:first-child': {\r\n      width: '100%',\r\n      marginRight: theme.spacing(1),\r\n      fontWeight: 'normal'\r\n    },\r\n    '& > *:last-child': {\r\n      marginRight: theme.spacing(-1)\r\n    }\r\n  },\r\n  drawerHeaderAdditional: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  drawerItem: {\r\n    padding: theme.spacing(2, 4)\r\n  },\r\n  drawerItemTitle: {\r\n    fontWeight: 'normal',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  drawerItemParam: {\r\n    marginBottom: theme.spacing(2),\r\n    '&:last-child': {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  },\r\n  slider: {\r\n    '& .MuiSlider-markLabel': {\r\n      display: 'flex',\r\n      width: 0,\r\n      justifyContent: 'center',\r\n      transform: 'none'\r\n    }\r\n  },\r\n  sliderMarkLeft: {\r\n    width: 0\r\n  },\r\n  sliderMarkRight: {\r\n    transform: 'translateX(-47%)'\r\n  },\r\n  drawerItemParamSwitch: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *:first-child': {\r\n      width: '100%'\r\n    },\r\n    '& > *:last-child': {\r\n      marginRight: theme.spacing(-1)\r\n    }\r\n  },\r\n  listItemWithButton: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > p': {\r\n      width: '100%'\r\n    }\r\n  },\r\n  nestedListItem: {\r\n    padding: theme.spacing(1, 4, 1, 6)\r\n  },\r\n  info: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  listItem: {\r\n    padding: theme.spacing(1, 4)\r\n  }\r\n}))\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Drawer,\n  IconButton,\n  Button,\n  Divider,\n  Typography\n} from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { Close, SaveOutlined } from '@material-ui/icons'\n\n// import { UsersList } from '../UsersList/UsersList';\n\nimport { useStyles } from './LeftDrawer.style'\n\nconst LeftDrawer = props => {\n  const { header, children } = props\n\n  const classes = useStyles()\n\n  const renderHeader = () => {\n    if (!header) {\n      return null\n    }\n\n    const renderAdditional = () => {\n      if (!header.saveButton) {\n        return null\n      }\n\n      const renderSaveButton = () => {\n        if (!header.saveButton.onSave) {\n          return <Alert severity=\"info\">{header.saveButton.message}</Alert>\n        }\n\n        return (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            disabled={header.saveButton.disabled}\n            // startIcon={<SaveOutlined />}\n            onClick={header.saveButton.onSave}\n          >\n            Сохранить\n          </Button>\n        )\n      }\n\n      return (\n        <div className={classes.drawerHeaderAdditional}>\n          {renderSaveButton()}\n        </div>\n      )\n    }\n\n    return (\n      <>\n        <div className={classes.drawerItem}>\n          <div className={classes.drawerHeader}>\n            <Typography variant=\"h6\">{header.title}</Typography>\n            <IconButton size=\"small\" component={Link} to={header.backRoute}>\n              <Close />\n            </IconButton>\n          </div>\n          {renderAdditional()}\n        </div>\n        <Divider />\n      </>\n    )\n  }\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper\n      }}\n      anchor=\"left\"\n    >\n      {renderHeader()}\n      {children}\n      {/* <Switch>\n        <Route exact path=\"/admin/users\">\n          <UsersList />\n        </Route>\n      </Switch> */}\n    </Drawer>\n  )\n}\n\nexport default LeftDrawer\n","import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button\n} from '@material-ui/core'\n\nconst AddDialog = props => {\n  const { isOpened, title, children, onClose, onAdd } = props\n\n  const _onAdd = () => {\n    if (!onAdd()) {\n      return\n    }\n\n    onClose()\n  }\n\n  return (\n    <Dialog open={isOpened} fullWidth onClose={onClose}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={_onAdd}>\n          Добавить\n        </Button>\n        <Button color=\"default\" onClick={onClose}>\n          Отмена\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default AddDialog\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Collapse,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  Tooltip\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport {\r\n  Add,\r\n  Remove,\r\n  ExpandMore,\r\n  ExpandLess,\r\n  CloudDownload,\r\n  CloudUpload\r\n} from '@material-ui/icons'\r\nimport { format } from 'date-fns'\r\nimport { ru } from 'date-fns/locale'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport * as api from '../../../../api'\r\n\r\nimport * as routing from '../../../../routing'\r\n\r\nimport { showNotification } from '../../../../redux/Notification/notification.actions'\r\n\r\nimport {\r\n  addScenario,\r\n  deleteScenario\r\n} from '../../../../redux/Scenarios/scenarios.actions'\r\n\r\nimport LeftDrawer from '../../../../ui/LeftDrawer'\r\nimport AddDialog from '../../../../ui/AddDialog'\r\n\r\nimport { useStyles } from '../../../../ui/LeftDrawer/LeftDrawer.style'\r\n\r\nconst ADD_SCENARIO_DIALOG_INITIAL_STATE = {\r\n  isOpened: false,\r\n  title: '',\r\n  errors: {}\r\n}\r\nconst STORAGE_DIALOG_INITIAL_STATE = {\r\n  isOpened: false,\r\n  file: null\r\n}\r\n\r\nconst AdminSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const scenarios = useSelector(state => state.scenarios)\r\n\r\n  const [addScenarioDialogState, setAddScenarioDialogState] = useState(\r\n    ADD_SCENARIO_DIALOG_INITIAL_STATE\r\n  )\r\n  const [storageDialogState, setStorageDialogState] = useState(\r\n    STORAGE_DIALOG_INITIAL_STATE\r\n  )\r\n  const [isMonitoringExpanded, setIsMonitoringExpanded] = useState(false)\r\n  const [monitoringRecords, setMonitoringRecords] = useState(null)\r\n\r\n  const fetchMonitoringRecordsEffect = () => {\r\n    if (monitoringRecords) {\r\n      return\r\n    }\r\n\r\n    setMonitoringRecords(api.getMonitoringRecords())\r\n  }\r\n\r\n  useEffect(fetchMonitoringRecordsEffect, [monitoringRecords])\r\n\r\n  const renderScenarios = () => {\r\n    const onAddScenarioDialogOpen = () => {\r\n      setAddScenarioDialogState({ ...addScenarioDialogState, isOpened: true })\r\n    }\r\n\r\n    const onAddScenarioDialogClose = () => {\r\n      setAddScenarioDialogState(ADD_SCENARIO_DIALOG_INITIAL_STATE)\r\n    }\r\n\r\n    const onScenarioTitleChange = e => {\r\n      setAddScenarioDialogState({\r\n        ...addScenarioDialogState,\r\n        title: e.target.value,\r\n        errors: {}\r\n      })\r\n    }\r\n\r\n    const onAddScenario = () => {\r\n      const result = dispatch(addScenario(addScenarioDialogState.title))\r\n\r\n      if (result?.errors) {\r\n        setAddScenarioDialogState({\r\n          ...addScenarioDialogState,\r\n          errors: result.errors\r\n        })\r\n        return false\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n    const renderList = () => {\r\n      if (!scenarios) {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {scenarios.map(scenario => {\r\n              const onDeleteScenario = e => {\r\n                e.preventDefault()\r\n                dispatch(deleteScenario(scenario.id))\r\n              }\r\n\r\n              return (\r\n                <ListItem\r\n                  key={scenario.id}\r\n                  className={classes.nestedListItem}\r\n                  button\r\n                  component={Link}\r\n                  to={routing.getRouteToScenarioEditor(scenario.id)}\r\n                >\r\n                  <ListItemText primary={scenario.title} />\r\n                  <Tooltip title=\"Удалить сценарий\" placement=\"right\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      onClick={onDeleteScenario}\r\n                    >\r\n                      <Remove />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </ListItem>\r\n              )\r\n            })}\r\n          </List>\r\n        </Collapse>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <AddDialog\r\n          isOpened={addScenarioDialogState.isOpened}\r\n          title=\"Добавление сценария\"\r\n          onAdd={onAddScenario}\r\n          onClose={onAddScenarioDialogClose}\r\n        >\r\n          <TextField\r\n            error={!!addScenarioDialogState.errors.title}\r\n            helperText={addScenarioDialogState.errors.title}\r\n            variant=\"outlined\"\r\n            label=\"Название сценария\"\r\n            value={addScenarioDialogState.title}\r\n            autoFocus\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n            onChange={onScenarioTitleChange}\r\n          />\r\n        </AddDialog>\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Сценарии\" />\r\n          <Tooltip title=\"Добавить сценарий\" placement=\"right\">\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={onAddScenarioDialogOpen}\r\n            >\r\n              <Add />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </ListItem>\r\n        {renderList()}\r\n        <Divider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderStorage = () => {\r\n    const onStorageDialogOpen = () => {\r\n      setStorageDialogState({ isOpened: true })\r\n    }\r\n\r\n    const onStorageDialogClose = () => {\r\n      setStorageDialogState(STORAGE_DIALOG_INITIAL_STATE)\r\n    }\r\n\r\n    const onDownloadStorage = () => {\r\n      const blob = new Blob([api.exportStorage()], {\r\n        type: 'application/json;charset=utf-8'\r\n      })\r\n      const filename = `hir-storage-${Date.now()}.json`\r\n\r\n      saveAs(blob, filename)\r\n    }\r\n\r\n    const onUploadStorage = e => {\r\n      setStorageDialogState({ ...storageDialogState, file: e.target.files[0] })\r\n    }\r\n\r\n    const onImportStorage = () => {\r\n      const fileReader = new FileReader()\r\n\r\n      fileReader.onload = e => {\r\n        onStorageDialogClose()\r\n        api.importStorage(e.target.result)\r\n      }\r\n\r\n      fileReader.readAsText(storageDialogState.file)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Dialog\r\n          open={storageDialogState.isOpened}\r\n          fullWidth\r\n          onClose={onStorageDialogClose}\r\n        >\r\n          <DialogTitle>Импорт / Экспорт хранилища</DialogTitle>\r\n          <DialogContent>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disableElevation\r\n              startIcon={<CloudDownload />}\r\n              onClick={onDownloadStorage}\r\n            >\r\n              Скачать файл хранилища\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            <input\r\n              id=\"upload-storage\"\r\n              type=\"file\"\r\n              accept=\"application/json\"\r\n              hidden\r\n              onChange={onUploadStorage}\r\n            />\r\n            <label htmlFor=\"upload-storage\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                component=\"span\"\r\n                startIcon={<CloudUpload />}\r\n              >\r\n                Загрузить файл хранилища\r\n              </Button>\r\n            </label>\r\n            <br />\r\n            <br />\r\n            <Alert severity=\"error\">\r\n              После импорта хранилища перезагрузите страницу.\r\n            </Alert>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={!storageDialogState.file}\r\n              onClick={onImportStorage}\r\n            >\r\n              Импортировать\r\n            </Button>\r\n            <Button color=\"default\" onClick={onStorageDialogClose}>\r\n              Отмена\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <ListItem\r\n          className={classes.listItem}\r\n          button\r\n          onClick={onStorageDialogOpen}\r\n        >\r\n          <ListItemText primary=\"Хранилище\" secondary=\"Импорт / Экспорт\" />\r\n        </ListItem>\r\n        <Divider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderMonitoring = () => {\r\n    const onToggleMonitoring = () => {\r\n      setIsMonitoringExpanded(!isMonitoringExpanded)\r\n    }\r\n\r\n    const renderExpandButton = () => {\r\n      if (!monitoringRecords?.length) {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <IconButton size=\"small\" color=\"primary\" onClick={onToggleMonitoring}>\r\n          {isMonitoringExpanded ? <ExpandLess /> : <ExpandMore />}\r\n        </IconButton>\r\n      )\r\n    }\r\n\r\n    const renderList = () => {\r\n      if (!monitoringRecords?.length) {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <Collapse in={isMonitoringExpanded} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {monitoringRecords.map(record => {\r\n              const onDeleteMonitoringRecord = e => {\r\n                e.preventDefault()\r\n                setMonitoringRecords(api.deleteMonitoringRecordById(record.id))\r\n                dispatch(\r\n                  showNotification(\r\n                    'warning',\r\n                    `Запись о мониторинге ${record.id} удалена`\r\n                  )\r\n                )\r\n              }\r\n\r\n              const renderTitle = () => {\r\n                return format(new Date(record.date), 'dd MMMM yyyy HH:mm', {\r\n                  locale: ru\r\n                })\r\n              }\r\n\r\n              return (\r\n                <ListItem\r\n                  key={record.id}\r\n                  className={classes.nestedListItem}\r\n                  button\r\n                  component={Link}\r\n                  to={routing.getRouteToMonitoringRecord(record.id)}\r\n                >\r\n                  <ListItemText primary={renderTitle()} />\r\n                  <Tooltip title=\"Удалить запись\" placement=\"right\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      onClick={onDeleteMonitoringRecord}\r\n                    >\r\n                      <Remove />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </ListItem>\r\n              )\r\n            })}\r\n          </List>\r\n        </Collapse>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ListItem\r\n          className={classes.listItem}\r\n          disabled={!monitoringRecords?.length}\r\n        >\r\n          <ListItemText primary=\"Мониторинг\" />\r\n          {renderExpandButton()}\r\n        </ListItem>\r\n        {renderList()}\r\n        <Divider />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <LeftDrawer>\r\n      <List disablePadding>\r\n        <ListItem\r\n          className={classes.listItem}\r\n          button\r\n          component={Link}\r\n          to={routing.ROUTE_LAYOUT_EDITOR}\r\n        >\r\n          <ListItemText\r\n            primary=\"Параметры представления\"\r\n            secondary=\"Общие настройки представления контента\"\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem\r\n          className={classes.listItem}\r\n          button\r\n          component={Link}\r\n          to={routing.ROUTE_THESAURUS}\r\n        >\r\n          <ListItemText\r\n            primary=\"Тезаурус\"\r\n            secondary=\"Словарь предметной области\"\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n        {renderStorage()}\r\n        {renderScenarios()}\r\n        {renderMonitoring()}\r\n        {/* <ListItem\r\n          className={classes.listItem}\r\n          button\r\n          component={Link}\r\n          to={routing.ROUTE_USERS}\r\n        >\r\n          <ListItemText primary=\"Пользователи\" />\r\n        </ListItem>\r\n        <Divider /> */}\r\n      </List>\r\n    </LeftDrawer>\r\n  )\r\n}\r\n\r\nexport default AdminSidebar\r\n","import axios from 'axios'\nimport { nanoid } from 'nanoid'\n\nimport { GOLDEN_RATIO } from '../constants'\n\nconst YANDEX_DICTIONARY_API_URL = 'https://dictionary.yandex.net/api/v1'\nconst YANDEX_DICTIONARY_API_KEY =\n  'dict.1.1.20220428T193402Z.bbc72334b78ae239.c390768c1f31e22a9869ba21e343dc717395e419'\nconst LANG = 'ru-ru'\nconst WORDS_EQUALITY_THRESHOLD = 0.7\n\nexport const TEXT_PART_TYPE = {\n  WORD: 'WORD',\n  PUNCTUATION: 'PUNCTUATION',\n  TERM: 'TERM'\n}\n\nconst _getQueryParamsString = params => {\n  const searchParams = new URLSearchParams()\n\n  Object.entries(params).forEach(([key, value]) => {\n    searchParams.append(key, value)\n  })\n\n  return searchParams.toString()\n}\n\nexport const getTermSynonyms = async term => {\n  if (!term) {\n    return []\n  }\n\n  try {\n    const query = _getQueryParamsString({\n      key: YANDEX_DICTIONARY_API_KEY,\n      lang: LANG,\n      text: term\n    })\n    const response = await axios.get(\n      `${YANDEX_DICTIONARY_API_URL}/dicservice.json/lookup?${query}`,\n      {\n        withCredentials: false\n      }\n    )\n    const synonyms = [\n      ...new Set(\n        response.data.def.reduce((defs, def) => {\n          return [\n            ...defs,\n            ...(def.tr || []).reduce((trs, tr) => {\n              return [\n                ...trs,\n                tr.text,\n                ...(tr.syn || []).reduce((synonyms, syn) => {\n                  return [...synonyms, syn.text]\n                }, [])\n              ]\n            }, [])\n          ]\n        }, [])\n      )\n    ]\n\n    return synonyms\n  } catch (err) {\n    console.error(err)\n\n    return []\n  }\n}\n\nconst _areWordsEqual = (w1, w2) => {\n  const w1Parts = w1.split(' ')\n  const w2Parts = w2.split(' ')\n\n  if (w1Parts.length !== w2Parts.length) {\n    return false\n  }\n\n  const partsNumber = w1Parts.length\n  const result = [...new Array(partsNumber)].map((_, j) => {\n    const words = [w1Parts[j], w2Parts[j]]\n      .map(w => {\n        return w.toLowerCase()\n      })\n      .sort((w1, w2) => {\n        return w1.length - w2.length\n      })\n\n    let charsCounter = 0\n\n    for (let i = 0; i < words[0].length; i++) {\n      if (words[0][i] === words[1][i]) {\n        charsCounter++\n      }\n    }\n\n    return charsCounter / words[1].length >= WORDS_EQUALITY_THRESHOLD\n  })\n\n  return result.filter(Boolean).length === partsNumber\n}\n\nexport const splitTextIntoParts = (text, thesaurus, weigh) => {\n  if (typeof text !== 'string') {\n    return text\n  }\n\n  const excluded = '-'\n  const words = [...text.matchAll(/[а-яё-]+/gi)].filter(word => {\n    return !excluded.includes(word[0])\n  })\n  const parts = []\n\n  const pushWord = value => {\n    parts.push({\n      id: nanoid(),\n      type: TEXT_PART_TYPE.WORD,\n      value\n    })\n  }\n\n  const pushPunctuation = value => {\n    parts.push({\n      type: TEXT_PART_TYPE.PUNCTUATION,\n      value\n    })\n  }\n\n  for (let i = 0; i < words.length; i++) {\n    const { index } = words[i]\n    const [word] = words[i]\n    const wordLength = word.length\n\n    if (i === 0 && index !== 0) {\n      pushPunctuation(text.slice(0, index))\n    }\n\n    pushWord(word)\n\n    const limit = words[i + 1]?.index\n\n    pushPunctuation(text.slice(index + wordLength, limit))\n  }\n\n  const sortedThesaurus = thesaurus\n    .reduce((terms, term) => {\n      return [\n        ...terms,\n        {\n          id: term.id,\n          term: term.term\n        },\n        ...term.synonyms.map(synonym => {\n          return {\n            id: term.id,\n            term: synonym\n          }\n        })\n      ]\n    }, [])\n    .sort((a, b) => {\n      return b.term.split(' ').length - a.term.split(' ').length\n    })\n\n  sortedThesaurus.forEach(term => {\n    const getTermFromThesaurus = () => {\n      return thesaurus.find(_term => {\n        return _term.id === term.id\n      })\n    }\n\n    const _parts = term.term.split(' ')\n    const num = _parts.length + _parts.length - 1\n\n    const checkCondition = part => {\n      return [...new Array(num)]\n        .map((_, i) => {\n          if (i % 2 === 0) {\n            return TEXT_PART_TYPE.WORD\n          }\n\n          return ' '\n        })\n        .every((item, i) => {\n          if (item === ' ') {\n            return part[i].value === item\n          }\n\n          return part[i].type === item\n        })\n    }\n\n    for (let i = 0; i < parts.length - num + 1; i++) {\n      const part = parts.slice(i, i + num)\n\n      if (!checkCondition(part)) {\n        continue\n      }\n\n      const partJoined = part\n        .map(item => {\n          return item.value\n        })\n        .join('')\n\n      if (_areWordsEqual(term.term, partJoined)) {\n        parts.splice(i, num, {\n          id: term.id,\n          type: TEXT_PART_TYPE.TERM,\n          value: partJoined,\n          term: getTermFromThesaurus()\n        })\n      }\n    }\n  })\n\n  const maxWordLength = weigh\n    ? Math.max(\n        ...parts.map(part => {\n          if (part.type !== TEXT_PART_TYPE.WORD) {\n            return 0\n          }\n\n          return part.value.length\n        })\n      )\n    : 1\n\n  //? Оставляем только \"семантически значимые\" слова\n  //? Вообще, это должно быть более сложным алгоритмом,\n  //? с учетом морфологии, ИПС и т.д.\n  const weightedParts = parts.map(part => {\n    if (\n      part.type !== TEXT_PART_TYPE.WORD ||\n      part.value.length / maxWordLength >= GOLDEN_RATIO\n    ) {\n      return part\n    }\n\n    return {\n      type: TEXT_PART_TYPE.PUNCTUATION,\n      value: part.value\n    }\n  })\n\n  return weightedParts\n}\n\nexport const splitContentBlocksIntoWords = (\n  blocks,\n  thesaurus,\n  weigh = true\n) => {\n  return Object.fromEntries(\n    Object.entries(blocks).map(([blockId, paragraphs]) => {\n      return [\n        blockId,\n        paragraphs.map(p => {\n          return splitTextIntoParts(p, thesaurus, weigh)\n        })\n      ]\n    })\n  )\n}\n","import React from 'react'\nimport { Slider as MuiSlider } from '@material-ui/core'\n\nimport { useStyles } from '../LeftDrawer/LeftDrawer.style'\n\nconst Slider = props => {\n  const { value, step, marks, onChange } = props\n\n  const classes = useStyles()\n\n  const min = marks[0].value\n  const max = marks.slice(-1)[0].value\n\n  const _marks = marks.map(({ value, label }, markIndex) => {\n    const getLabel = () => {\n      const getLabelParts = () => {\n        return label.split('_').reduce((label, part, partIndex, parts) => {\n          if (partIndex === parts.length - 1) {\n            return [...label, part]\n          }\n\n          return [...label, part, <br key={partIndex} />]\n        }, [])\n      }\n\n      const _label = label ? getLabelParts() : value\n\n      if (markIndex === 0) {\n        return <span className={classes.sliderMarkLeft}>{_label}</span>\n      }\n\n      if (markIndex === marks.length - 1) {\n        return <span className={classes.sliderMarkRight}>{_label}</span>\n      }\n\n      return <span>{_label}</span>\n    }\n\n    return { value, label: getLabel() }\n  })\n\n  return (\n    <MuiSlider\n      className={classes.slider}\n      color=\"primary\"\n      value={value}\n      min={min}\n      max={max}\n      step={step}\n      marks={_marks}\n      valueLabelDisplay=\"auto\"\n      onChange={onChange}\n    />\n  )\n}\n\nexport default Slider\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Typography } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { get as lodashGet, set as lodashSet } from 'lodash'\r\n\r\nimport { ATOM } from '../../../../constants'\r\n\r\nimport * as routing from '../../../../routing'\r\n\r\nimport {\r\n  updateLayout,\r\n  saveLayout\r\n} from '../../../../redux/Layout/layout.actions'\r\n\r\nimport LeftDrawer from '../../../../ui/LeftDrawer'\r\nimport Slider from '../../../../ui/Slider'\r\n\r\nimport { useStyles } from '../../../../ui/LeftDrawer/LeftDrawer.style'\r\n\r\nconst layoutParams = [\r\n  {\r\n    param: 'maxWidth',\r\n    label: 'Максимальная ширина области контента',\r\n    min: 1000,\r\n    max: 1920,\r\n    step: 10\r\n  },\r\n  {\r\n    param: 'lineHeight',\r\n    label: 'Высота строки',\r\n    min: ATOM * 3,\r\n    max: ATOM * 4,\r\n    step: 1\r\n  },\r\n  {\r\n    param: 'fontSize',\r\n    label: 'Размер шрифта',\r\n    min: 12,\r\n    max: 16,\r\n    step: 2\r\n  },\r\n  {\r\n    param: 'grid.columnGutter',\r\n    label: 'Ширина межколоночного интервала',\r\n    min: ATOM,\r\n    max: ATOM * ATOM,\r\n    step: ATOM\r\n  },\r\n  {\r\n    param: 'focusLine',\r\n    label: 'Высота линии фокуса',\r\n    min: 0,\r\n    max: 20,\r\n    step: 1\r\n  }\r\n]\r\n\r\nconst LayoutEditor = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const layout = useSelector(state => state.layout)\r\n\r\n  const classes = useStyles()\r\n\r\n  const [isLayoutChanged, setIsLayoutChanged] = useState(false)\r\n\r\n  const initialLayoutRef = useRef(null)\r\n\r\n  const setInitialLayout = () => {\r\n    initialLayoutRef.current = JSON.stringify(layout)\r\n  }\r\n\r\n  const setInitialLayoutEffect = () => {\r\n    if (initialLayoutRef.current) {\r\n      return\r\n    }\r\n\r\n    setInitialLayout()\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(setInitialLayoutEffect, [layout])\r\n\r\n  const setIsLayoutChangedEffect = () => {\r\n    const _isLayoutChanged = initialLayoutRef.current !== JSON.stringify(layout)\r\n\r\n    if (_isLayoutChanged === isLayoutChanged) {\r\n      return\r\n    }\r\n\r\n    setIsLayoutChanged(_isLayoutChanged)\r\n  }\r\n\r\n  useEffect(setIsLayoutChangedEffect, [isLayoutChanged, layout])\r\n\r\n  const resetLayoutEffect = () => {\r\n    return () => {\r\n      dispatch(updateLayout(JSON.parse(initialLayoutRef.current)))\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(resetLayoutEffect, [])\r\n\r\n  const onLayoutParamChange = (param, value) => {\r\n    const prevValue = lodashGet(layout, param)\r\n\r\n    if (value === prevValue) {\r\n      return\r\n    }\r\n\r\n    const changedLayout = lodashSet(\r\n      JSON.parse(JSON.stringify(layout)),\r\n      param,\r\n      value\r\n    )\r\n\r\n    dispatch(updateLayout(changedLayout))\r\n  }\r\n\r\n  const onSave = () => {\r\n    dispatch(saveLayout())\r\n    setIsLayoutChanged(false)\r\n    setInitialLayout()\r\n  }\r\n\r\n  return (\r\n    <LeftDrawer\r\n      header={{\r\n        title: 'Параметры представления',\r\n        backRoute: routing.ROUTE_ADMIN,\r\n        saveButton: {\r\n          disabled: !isLayoutChanged,\r\n          onSave\r\n        }\r\n      }}\r\n    >\r\n      <div className={classes.drawerItem}>\r\n        <Alert className={classes.info} severity=\"info\">\r\n          Рекомендуется установить такую высоту строки, чтобы она была меньше\r\n          ширины межколоночного интервала.\r\n        </Alert>\r\n        {layoutParams.map(param => {\r\n          const getValue = () => {\r\n            return lodashGet(layout, param.param)\r\n          }\r\n\r\n          const getSliderMarks = () => {\r\n            return [param.min, param.max].map(value => {\r\n              return { value }\r\n            })\r\n          }\r\n\r\n          return (\r\n            <div key={param.param} className={classes.drawerItemParam}>\r\n              <Typography variant=\"body1\">{param.label}</Typography>\r\n              <Slider\r\n                value={getValue()}\r\n                step={param.step}\r\n                marks={getSliderMarks()}\r\n                onChange={(e, value) => onLayoutParamChange(param.param, value)}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </LeftDrawer>\r\n  )\r\n}\r\n\r\nexport default LayoutEditor\r\n","export const joinClasses = (...classes) => {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport const circleRectCollision = (circle, rect) => {\n  const distX = Math.abs(circle.x - rect.x - rect.w / 2)\n  const distY = Math.abs(circle.y - rect.y - rect.h / 2)\n\n  if (distX > rect.w / 2 + circle.r) {\n    return false\n  }\n\n  if (distY > rect.h / 2 + circle.r) {\n    return false\n  }\n\n  if (distX <= rect.w / 2) {\n    return true\n  }\n\n  if (distY <= rect.h / 2) {\n    return true\n  }\n\n  const dx = distX - rect.w / 2\n  const dy = distY - rect.h / 2\n\n  return dx * dx + dy * dy <= circle.r * circle.r\n}\n\nexport const pickKeysFromObject = (obj, keys) => {\n  return Object.fromEntries(\n    keys.map(key => {\n      return [key, obj[key]]\n    })\n  )\n}\n\nexport const getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max + 1 - min) + min)\n}\n\nexport const circleCircleCollision = (c1, c2) => {\n  const dx = c1.x - c2.x\n  const dy = c1.y - c2.y\n\n  return Math.sqrt(dx ** 2 + dy ** 2) <= c1.r + c2.r\n}\n\nexport const getAngleBetweenPoints = (p1, p2) => {\n  const dx = p1.x - p2.x\n  const dy = p1.y - p2.y\n\n  return Math.atan2(dy, dx)\n}\n","import {\n  circleRectCollision,\n  pickKeysFromObject,\n  circleCircleCollision\n} from '../helpers'\n\nimport { TEXT_PART_TYPE } from './content'\n\nconst MAX_RECOGNITION_FIX_DURATION = 750\n\nconst INITIAL_STATE = {\n  parts: {},\n  prevHoveredParts: [],\n  gazePlot: []\n}\n\nlet STATE = null\n\nconst initState = () => {\n  STATE = JSON.parse(JSON.stringify(INITIAL_STATE))\n}\n\ninitState()\n\n//? Нужно добавить условие для повторного раскрытия понятий\n//! Проблема с partId: когда раскрываются понятия, в partId слов абзаца, который расположен ниже блока с определением, меняется часть, отвечающая за индекс абзаца, из-за этого новый partId больше не связан с записанными параметрами слова\n//! Проблема с раскрытием блоков (глобально - с изменением содержания, размеров контента): некоторые координаты взгляда становятся неактуальными, например, изменилась высота блока, и теперь взгляд \"смотрит\" не туда, куда смотрел до изменения высоты\n\nexport const getTermsToExpand = (gaze, contentMarkup) => {\n  const lastGaze = STATE.gazePlot.slice(-1)[0] || { x: -2000, y: -2000 }\n  const _gaze = { x: gaze.x - gaze.left, y: gaze.y - gaze.top }\n\n  // if (!circleCircleCollision({ ..._gaze, r: 15 }, { ...lastGaze, r: 15 })) {\n  //   STATE.gazePlot.push(_gaze)\n  // }\n\n  STATE.gazePlot.push(_gaze)\n\n  const getHoveredParts = partType => {\n    const getMarkup = () => {\n      switch (partType) {\n        case TEXT_PART_TYPE.TERM:\n          return contentMarkup.terms\n        case TEXT_PART_TYPE.WORD:\n          return contentMarkup.words\n        default:\n          return null\n      }\n    }\n\n    return Object.entries(getMarkup())\n      .filter(([partId, rect]) => {\n        return circleRectCollision(gaze, rect)\n      })\n      .map(([partId]) => {\n        return {\n          type: partType,\n          id: partId.split('__')[2],\n          partId\n        }\n      })\n  }\n\n  const hoveredTerms = getHoveredParts(TEXT_PART_TYPE.TERM)\n  const hoveredWords = getHoveredParts(TEXT_PART_TYPE.WORD)\n  const hoveredParts = [...hoveredTerms, ...hoveredWords]\n\n  const termsToExpand = []\n\n  hoveredParts.forEach(({ type, id, partId }) => {\n    if (!STATE.parts[partId]) {\n      STATE.parts[partId] = {\n        id,\n        type,\n        isRecognized: null,\n        fixations: []\n      }\n    }\n\n    const prevHoveredPartIndex = STATE.prevHoveredParts.findIndex(\n      prevHoveredPart => {\n        return prevHoveredPart.partId === partId\n      }\n    )\n\n    if (prevHoveredPartIndex === -1) {\n      STATE.parts[partId].fixations.push([Date.now()])\n    } else {\n      STATE.prevHoveredParts.splice(prevHoveredPartIndex, 1)\n    }\n\n    if (STATE.parts[partId].isRecognized === false) {\n      return\n    }\n\n    const fixDuration = STATE.parts[partId].fixations.reduce(\n      (duration, fixation) => {\n        const [begin] = fixation\n        const end = fixation[1] || Date.now()\n\n        return duration + (end - begin)\n      },\n      0\n    )\n    const isRecognized = fixDuration <= MAX_RECOGNITION_FIX_DURATION\n\n    if (type === TEXT_PART_TYPE.TERM) {\n      const isTermAlreadyExpanded = () => {\n        return !!Object.values(STATE.parts).find(part => {\n          return part.id === id && !part.isRecognized\n        })\n      }\n\n      if (!isRecognized && !isTermAlreadyExpanded()) {\n        termsToExpand.push(partId)\n      }\n    }\n\n    STATE.parts[partId].isRecognized = isRecognized\n  })\n\n  STATE.prevHoveredParts.forEach(({ partId }) => {\n    const { fixations } = STATE.parts[partId]\n\n    STATE.parts[partId].fixations[fixations.length - 1].push(Date.now())\n  })\n\n  STATE.prevHoveredParts = hoveredParts\n\n  return termsToExpand\n}\n\nexport const getMonitoringData = () => {\n  return pickKeysFromObject(STATE, ['parts', 'gazePlot'])\n}\n\nexport const clearState = () => {\n  initState()\n}\n","import { useRef, useEffect } from 'react'\n\nconst GAZE_INITIAL_VALUE = { x: 0, y: 0, r: 15, isMoving: false }\n\nconst useGaze = props => {\n  const { doMonitoring } = props\n\n  const gazeRef = useRef(GAZE_INITIAL_VALUE)\n\n  const setGazeListenerEffect = () => {\n    if (!doMonitoring) {\n      return\n    }\n\n    window.webgazer.clearData()\n    window.webgazer\n      .setGazeListener(data => {\n        if (!data) {\n          return\n        }\n\n        setGazePosition({ clientX: data.x, clientY: data.y })\n      })\n      .begin()\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(setGazeListenerEffect, [])\n\n  const clearGazeListener = () => {\n    return () => {\n      try {\n        window.webgazer.clearGazeListener()\n        window.webgazer.end()\n        window.webgazer.stopVideo()\n      } catch {\n        //\n      }\n    }\n  }\n\n  useEffect(clearGazeListener, [])\n\n  const setGazePosition = e => {\n    gazeRef.current.x = e.clientX\n    gazeRef.current.y = e.clientY\n    gazeRef.current.isMoving = true\n  }\n\n  const onGazeMove = e => {\n    setGazePosition(e)\n  }\n\n  return {\n    gaze: gazeRef.current,\n    onGazeMove\n  }\n}\n\nexport default useGaze\n","import { useState, useRef, useEffect } from 'react'\nimport { useTheme } from '@material-ui/core'\n\nimport { circleRectCollision } from '../helpers'\n\nconst AUTO_SCROLL_MAX_SPEED = 5\nconst FOCUS_LINE_INITIAL_VALUE = { cy: 0, height: 0, topY: 0, bottomY: 0 }\n\nconst useAutoScroll = props => {\n  const { gaze } = props\n\n  const theme = useTheme()\n\n  const [contentContainer, setContentContainer] = useState(null)\n\n  const containerSupportRef = useRef(null)\n  const focusLineRef = useRef(FOCUS_LINE_INITIAL_VALUE)\n\n  const getGazeSpaceBounds = () => {\n    return contentContainer?.getBoundingClientRect()\n  }\n\n  const setFocusLineEffect = () => {\n    if (!contentContainer) {\n      return\n    }\n\n    const getFocusLine = () => {\n      const cy =\n        (getGazeSpaceBounds().y || 0) + parseFloat(theme.layout.getTop())\n      const height = theme.layout.lineHeight\n\n      return {\n        cy,\n        height,\n        topY: cy - height / 2,\n        bottomY: cy + height / 2\n      }\n    }\n\n    const newFocusLine = getFocusLine()\n\n    if (JSON.stringify(newFocusLine) === JSON.stringify(focusLineRef.current)) {\n      return\n    }\n\n    focusLineRef.current = newFocusLine\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(setFocusLineEffect, [contentContainer, theme.layout])\n\n  const isGazeInsideGazeSpace = () => {\n    const { x, y, width, height } = getGazeSpaceBounds()\n\n    return circleRectCollision(\n      { ...gaze, r: 0 },\n      {\n        x,\n        y,\n        w: width,\n        h: height\n      }\n    )\n  }\n\n  const isGazeAboveFocusLine = () => {\n    return gaze.y < focusLineRef.current.topY\n  }\n\n  const isGazeBelowFocusLine = () => {\n    return gaze.y > focusLineRef.current.bottomY\n  }\n\n  const getUpLimit = () => {\n    return 0\n  }\n\n  const getContainerSupportHeight = () => {\n    return containerSupportRef.current.getBoundingClientRect().height\n  }\n\n  const getBottomLimit = () => {\n    return getGazeSpaceBounds().height - getContainerSupportHeight()\n  }\n\n  const scroll = () => {\n    const getStep = () => {\n      const { y, height } = getGazeSpaceBounds()\n\n      if (isGazeAboveFocusLine()) {\n        const dy = focusLineRef.current.topY - gaze.y\n        const ratio = dy / (focusLineRef.current.topY - y)\n\n        return ratio * AUTO_SCROLL_MAX_SPEED\n      }\n\n      if (isGazeBelowFocusLine()) {\n        const dy = focusLineRef.current.bottomY - gaze.y\n        const ratio = dy / (y + height - focusLineRef.current.bottomY)\n\n        return ratio * AUTO_SCROLL_MAX_SPEED\n      }\n\n      return 0\n    }\n\n    const getTop = () => {\n      const step = Math.round(getStep())\n      const prevTop = parseFloat(containerSupportRef.current.style.top) || 0\n      const top = prevTop + step\n\n      const upLimit = getUpLimit()\n\n      if (top > upLimit) {\n        return upLimit\n      }\n\n      const bottomLimit = getBottomLimit()\n\n      if (top < bottomLimit) {\n        return bottomLimit\n      }\n\n      return top\n    }\n\n    const top = getTop()\n\n    containerSupportRef.current.style.top = `${top}px`\n  }\n\n  return {\n    containerSupportRef,\n    setContentContainer,\n    isGazeInsideGazeSpace,\n    scroll\n  }\n}\n\nexport default useAutoScroll\n","import * as types from './blockEditor.types'\n\nexport const toggleAddBlockDialog =\n  (order = null, direction = null) =>\n  (dispatch, getState) => {\n    const { blockEditor } = getState()\n\n    dispatch({\n      type: types.TOGGLE_ADD_BLOCK_DIALOG,\n      payload: { show: !blockEditor.addBlockDialog.show, order, direction }\n    })\n  }\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 999,\n    pointerEvents: 'none',\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  column: {\n    width: theme.layout.getWidth(1),\n    backgroundColor: 'rgba(245, 0, 87, 0.03)',\n    outline: '1px solid rgba(245, 0, 87, 0.1)'\n  }\n}))\n","import React from 'react'\r\nimport { useTheme } from '@material-ui/core'\r\n\r\nimport { useStyles } from './Grid.style'\r\n\r\nconst Grid = () => {\r\n  const theme = useTheme()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {[...new Array(theme.layout.grid.columnsNumber)].map((_, i) => {\r\n        return <div key={i} className={classes.column} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    color: '#fff',\r\n    backgroundColor: theme.palette.primary.main,\r\n    boxShadow: theme.shadows[3],\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.light\r\n    }\r\n  }\r\n}))\r\n","import React, { useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { IconButton } from '@material-ui/core'\nimport {\n  MoreHoriz,\n  ArrowUpward,\n  ArrowDownward,\n  VerticalAlignTop,\n  VerticalAlignBottom,\n  Edit,\n  Delete\n} from '@material-ui/icons'\n\nimport * as routing from '../../../../routing'\n\nimport { toggleAddBlockDialog } from '../../../../redux/BlockEditor/blockEditor.actions'\n\nimport Menu from '../../../../ui/Menu'\n\nimport { useStyles } from './BlockActions.style'\n\nimport './BlockActions.css'\n\nconst BlockActions = props => {\n  const { block, canMoveUp, canMoveDown, blockActions } = props\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { scenarioId, blockId } = useParams()\n\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleMenuOpen = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const moveBlockUp = () => {\n    handleMenuClose()\n    blockActions.moveUp(block)\n  }\n\n  const moveBlockDown = () => {\n    handleMenuClose()\n    blockActions.moveDown(block)\n  }\n\n  const removeBlock = () => {\n    handleMenuClose()\n    blockActions.delete(block)\n\n    if (blockId) {\n      history.push(routing.getRouteToScenarioEditor(scenarioId))\n    }\n  }\n\n  const addBlock = direction => {\n    handleMenuClose()\n    dispatch(toggleAddBlockDialog(block.order, direction))\n  }\n\n  const menuItems = [\n    [\n      {\n        title: 'Редактировать',\n        icon: <Edit color=\"primary\" />,\n        to: routing.getRouteToBlockEditor(scenarioId, block.id)\n      },\n      {\n        visible: canMoveUp,\n        title: 'Переместить вверх',\n        icon: <ArrowUpward color=\"primary\" />,\n        onClick: moveBlockUp\n      },\n      {\n        visible: canMoveDown,\n        title: 'Переместить вниз',\n        icon: <ArrowDownward color=\"primary\" />,\n        onClick: moveBlockDown\n      },\n      {\n        title: 'Удалить',\n        icon: <Delete color=\"secondary\" />,\n        onClick: removeBlock\n      }\n    ],\n    [\n      {\n        title: 'Добавить блок сверху',\n        icon: <VerticalAlignTop color=\"primary\" />,\n        onClick: () => addBlock(-1)\n      },\n      {\n        title: 'Добавить блок снизу',\n        icon: <VerticalAlignBottom color=\"primary\" />,\n        onClick: () => addBlock(1)\n      }\n    ]\n  ]\n\n  return (\n    <>\n      <div className=\"content-block-actions-container\">\n        <IconButton\n          className={classes.icon}\n          size=\"small\"\n          onClick={handleMenuOpen}\n        >\n          <MoreHoriz />\n        </IconButton>\n      </div>\n      <Menu anchorEl={anchorEl} onClose={handleMenuClose}>\n        {menuItems}\n      </Menu>\n    </>\n  )\n}\n\nexport default BlockActions\n","import React from 'react'\r\nimport { useTheme } from '@material-ui/core'\r\n\r\nimport { BLOCK_TYPE } from '../../constants'\r\n\r\nimport './Image.css'\r\n\r\nconst Image = props => {\r\n  const { block } = props\r\n\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <div\r\n      className=\"content-block-item image\"\r\n      style={{\r\n        backgroundImage: `url(${block.image.src})`,\r\n        backgroundSize: block.image.size,\r\n        height: block.image.height\r\n          ? `${theme.layout.lineHeight * block.image.height}px`\r\n          : 'auto',\r\n        top:\r\n          block.type === BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL\r\n            ? theme.layout.getTop()\r\n            : 'auto'\r\n      }}\r\n    ></div>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\n\nimport { WORD_CLASS_NAME, TERM_CLASS_NAME } from '../../constants'\n\nimport { TEXT_PART_TYPE } from '../../api/content'\n\nimport { joinClasses } from '../../helpers'\n\nimport './SplittedText.css'\n\nconst SplittedText = props => {\n  const { blockId, paragraphIndex, children, getTextPartClass } = props\n\n  if (typeof children === 'string') {\n    return children\n  }\n\n  return children.map((part, partIndex) => {\n    const isPartTerm = part.type === TEXT_PART_TYPE.TERM\n    const isPartWord = part.type === TEXT_PART_TYPE.WORD\n\n    const getClassAndId = () => {\n      const id = `${blockId}__${paragraphIndex}__${part.id}__${partIndex}`\n\n      if (isPartTerm) {\n        return {\n          className: TERM_CLASS_NAME,\n          id\n        }\n      }\n\n      if (isPartWord) {\n        return {\n          className: WORD_CLASS_NAME,\n          id\n        }\n      }\n\n      return {\n        className: undefined,\n        id: undefined\n      }\n    }\n\n    const { className, id } = getClassAndId()\n\n    return (\n      <span\n        key={partIndex}\n        className={joinClasses(\n          className,\n          getTextPartClass && id && getTextPartClass(id)\n        )}\n        id={id}\n      >\n        {part.value}\n      </span>\n    )\n  })\n}\n\nexport default SplittedText\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  alert: {\n    padding: `${theme.layout.lineHeight}px`,\n    '& .MuiAlert-icon': {\n      padding: 0\n    },\n    '& .MuiAlert-message': {\n      padding: 0,\n      fontFamily: theme.layout.fontFamily,\n      fontSize: `${theme.layout.fontSize}px`,\n      lineHeight: `${theme.layout.lineHeight}px`\n    }\n  }\n}))\n","import React from 'react'\nimport { Alert } from '@material-ui/lab'\n\nimport { useStyles } from './TextAlert.style'\n\nconst TextAlert = props => {\n  const { severity, children } = props\n\n  const classes = useStyles()\n\n  return (\n    <Alert className={classes.alert} severity={severity} variant=\"standard\">\n      {children}\n    </Alert>\n  )\n}\n\nexport default TextAlert\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  card: {\n    '& span': {\n      fontFamily: theme.layout.fontFamily,\n      fontSize: `${theme.layout.fontSize}px`,\n      lineHeight: `${theme.layout.lineHeight}px`\n    }\n  },\n  header: {\n    padding: `${theme.layout.lineHeight}px ${theme.layout.lineHeight}px 0 ${theme.layout.lineHeight}px !important`\n  },\n  content: {\n    padding: `${theme.layout.lineHeight}px !important`\n  }\n}))\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  useTheme,\n  Card,\n  CardContent,\n  IconButton,\n  CardHeader,\n  Avatar\n} from '@material-ui/core'\nimport { Edit, Delete, School, MoreHoriz } from '@material-ui/icons'\n\nimport { deleteTerm } from '../../redux/Thesaurus/thesaurus.actions'\n\nimport Menu from '../Menu'\nimport SplittedText from '../SplittedText'\n\nimport { useStyles } from './TermCard.style'\n\nconst TermCard = props => {\n  const {\n    term,\n    showMenu,\n    splittedTextData,\n    onTermDialogOpen,\n    getTextPartClass\n  } = props\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n\n  const theme = useTheme()\n\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const onMenuOpen = e => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const onMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const title = term.term.toLowerCase()\n  const synonyms = term.synonyms.map(synonym => {\n    return synonym.toLowerCase()\n  })\n\n  const menuItems = [\n    [\n      {\n        title: 'Редактировать',\n        icon: <Edit color=\"primary\" />,\n        onClick: () => {\n          onTermDialogOpen(term)\n        }\n      },\n      {\n        title: 'Удалить',\n        icon: <Delete color=\"secondary\" />,\n        onClick: () => {\n          dispatch(deleteTerm(term.id))\n        }\n      }\n    ]\n  ]\n\n  const renderSubheader = () => {\n    return synonyms.map((synonym, i) => {\n      const renderBull = () => {\n        if (i !== synonyms.length - 1) {\n          return <>&nbsp;&bull;&nbsp;</>\n        }\n\n        return null\n      }\n\n      return (\n        <React.Fragment key={i}>\n          {synonym}\n          {renderBull()}\n        </React.Fragment>\n      )\n    })\n  }\n\n  const renderDefinition = () => {\n    if (!splittedTextData) {\n      return term.definition\n    }\n\n    const { blockId, paragraphIndex } = splittedTextData\n\n    return (\n      <SplittedText\n        blockId={blockId}\n        paragraphIndex={paragraphIndex}\n        getTextPartClass={getTextPartClass}\n      >\n        {term.definition}\n      </SplittedText>\n    )\n  }\n\n  return (\n    <>\n      <Menu anchorEl={anchorEl} onClose={onMenuClose}>\n        {menuItems}\n      </Menu>\n      <Card className={classes.card} variant=\"outlined\" elevation={3}>\n        <CardHeader\n          className={classes.header}\n          title={title}\n          subheader={renderSubheader()}\n          avatar={\n            <Avatar\n              style={{\n                // backgroundColor: theme.palette.primary.light,\n                backgroundColor: 'rgb(232, 244, 253)',\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n              }}\n            >\n              <School\n                style={{\n                  // color: '#fff',\n                  color: '#2196f3',\n                  width: theme.spacing(3),\n                  height: theme.spacing(3)\n                }}\n              />\n            </Avatar>\n          }\n          action={\n            showMenu && (\n              <IconButton\n                size=\"small\"\n                style={{ marginLeft: theme.spacing(2) }}\n                onClick={onMenuOpen}\n              >\n                <MoreHoriz />\n              </IconButton>\n            )\n          }\n        />\n        <CardContent className={classes.content}>\n          <p>{renderDefinition()}</p>\n        </CardContent>\n      </Card>\n    </>\n  )\n}\n\nexport default TermCard\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  item: {\n    padding: `${theme.layout.lineHeight}px ${theme.layout.getWidth(1)}`,\n    backgroundColor: '#fff'\n  }\n}))\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  title: {\n    fontFamily: theme.layout.fontFamily,\n    fontSize: theme.layout.titleFontSize,\n    lineHeight: theme.layout.titleLineHeight,\n    marginBottom: `${theme.layout.lineHeight}px`\n  },\n  text: {\n    '& > *': {\n      '& + *': {\n        marginTop: `${theme.layout.lineHeight}px`\n      }\n    },\n    '& p': {\n      fontFamily: theme.layout.fontFamily,\n      fontSize: `${theme.layout.fontSize}px`,\n      lineHeight: `${theme.layout.lineHeight}px`\n      // fontSize: 0,\n      // '& span': {\n      //   position: 'relative',\n      //   fontSize: `${theme.layout.fontSize}px`,\n      //   lineHeight: `${theme.layout.lineHeight}px`\n      // }\n    }\n  }\n}))\n","import React from 'react'\r\nimport { useTheme } from '@material-ui/core'\r\n\r\nimport { FORMAT_TAG, BLOCK_TYPE } from '../../constants'\r\n\r\nimport SplittedText from '../../ui/SplittedText'\r\nimport TextAlert from '../../ui/TextAlert'\r\nimport TermCard from '../../ui/TermCard'\r\n\r\nimport { useStyles as useBlockStyles } from '../Block/Block.style'\r\nimport { useStyles } from './Text.style'\r\n\r\nimport './Text.css'\r\n\r\nconst Text = props => {\r\n  const { block, parentType, cascade, getTextPartClass } = props\r\n\r\n  const theme = useTheme()\r\n\r\n  const blockClasses = useBlockStyles()\r\n  const classes = useStyles()\r\n\r\n  const getFlex = () => {\r\n    if (!cascade && parentType === BLOCK_TYPE.TEXT_IMAGE_VERTICAL) {\r\n      return 1\r\n    }\r\n\r\n    return 'none'\r\n  }\r\n\r\n  const renderTitle = () => {\r\n    if (!block.title) {\r\n      return null\r\n    }\r\n\r\n    return <div className={classes.title}>{block.title}</div>\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={blockClasses.item}\r\n      style={{\r\n        width: block.params.textWidth\r\n          ? theme.layout.getWidth(block.params.textWidth)\r\n          : 'auto',\r\n        flex: getFlex(),\r\n        position: 'sticky',\r\n        alignSelf: 'flex-start',\r\n        top: theme.layout.getTop()\r\n      }}\r\n    >\r\n      {renderTitle()}\r\n      <div className={classes.text}>\r\n        {block.text.map((p, pIndex) => {\r\n          const renderText = text => {\r\n            return (\r\n              <SplittedText\r\n                blockId={block.id}\r\n                paragraphIndex={pIndex}\r\n                getTextPartClass={getTextPartClass}\r\n              >\r\n                {text}\r\n              </SplittedText>\r\n            )\r\n          }\r\n\r\n          if (p.id) {\r\n            return (\r\n              <TermCard\r\n                key={pIndex}\r\n                term={p}\r\n                splittedTextData={{\r\n                  blockId: block.id,\r\n                  paragraphIndex: pIndex\r\n                }}\r\n                getTextPartClass={getTextPartClass}\r\n              />\r\n            )\r\n          }\r\n\r\n          const formatTag = p[0]?.value\r\n\r\n          if (Object.values(FORMAT_TAG).includes(formatTag)) {\r\n            const severity = Object.entries(FORMAT_TAG)\r\n              .find(([, tag]) => {\r\n                return tag === formatTag\r\n              })[0]\r\n              .toLowerCase()\r\n\r\n            return (\r\n              <TextAlert key={pIndex} severity={severity}>\r\n                {renderText(p.slice(1))}\r\n              </TextAlert>\r\n            )\r\n          }\r\n\r\n          return <p key={pIndex}>{renderText(p)}</p>\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text\r\n","import React from 'react'\r\n\r\nimport Image from '../Image'\r\nimport Text from '../Text'\r\n\r\nimport './TextImageHorizontal.css'\r\n\r\nconst TextImageHorizontal = props => {\r\n  const { block } = props\r\n\r\n  const text = <Text {...props} />\r\n  const image = <Image {...props} />\r\n  const items = block.image.position === 'left' ? [image, text] : [text, image]\r\n\r\n  return items.map((item, index) => ({ ...item, key: index }))\r\n}\r\n\r\nexport default TextImageHorizontal\r\n","import React from 'react'\r\n\r\nimport Image from '../Image'\r\nimport Text from '../Text'\r\n\r\nimport './TextImageVertical.css'\r\n\r\nconst TextImageVertical = props => {\r\n  return (\r\n    <>\r\n      <Image {...props} />\r\n      <Text {...props} parentType=\"text-image-vertical\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextImageVertical\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useInView } from 'react-intersection-observer'\r\n\r\nimport { SCENARIO_MODE } from '../../constants'\r\n\r\nimport { joinClasses } from '../../helpers'\r\n\r\nimport './FadeInContainer.css'\r\n\r\nconst FadeInBlock = props => {\r\n  const { modes, children } = props\r\n\r\n  const { ref, inView } = useInView()\r\n\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  const setIsVisibleEffect = () => {\r\n    if (isVisible || !inView) {\r\n      return\r\n    }\r\n\r\n    setIsVisible(true)\r\n  }\r\n\r\n  useEffect(setIsVisibleEffect, [inView, isVisible])\r\n\r\n  if (!modes.includes(SCENARIO_MODE.VIEW)) {\r\n    return children\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={joinClasses('fade-in-container', isVisible && 'is-visible')}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FadeInBlock\r\n","import React from 'react'\r\nimport { useTheme } from '@material-ui/core'\r\n\r\nimport { SCENARIO_MODE, BLOCK_TYPE } from '../../constants'\r\n\r\nimport BlockActions from '../../pages/ScenarioEditorPage/components/BlockActions'\r\nimport Image from '../Image'\r\nimport Text from '../Text'\r\nimport TextImageHorizontal from '../TextImageHorizontal'\r\nimport TextImageVertical from '../TextImageVertical'\r\nimport FadeInContainer from '../../ui/FadeInContainer'\r\n\r\nimport './Block.css'\r\n\r\nconst Block = props => {\r\n  const {\r\n    modes,\r\n    block,\r\n    canMoveUp,\r\n    canMoveDown,\r\n    cascade,\r\n    blockActions,\r\n    getTextPartClass\r\n  } = props\r\n\r\n  const theme = useTheme()\r\n\r\n  const renderBlockActions = () => {\r\n    if (!modes.includes(SCENARIO_MODE.EDIT)) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <BlockActions\r\n        block={block}\r\n        canMoveUp={canMoveUp}\r\n        canMoveDown={canMoveDown}\r\n        blockActions={blockActions}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderBlock = () => {\r\n    const getWidth = () => {\r\n      if (block.params.width) {\r\n        return theme.layout.getWidth(block.params.width)\r\n      }\r\n\r\n      if (block.params.textWidth) {\r\n        return theme.layout.getWidth(block.params.textWidth)\r\n      }\r\n\r\n      return 'auto'\r\n    }\r\n\r\n    const getHeight = () => {\r\n      if (cascade) {\r\n        return 'auto'\r\n      }\r\n\r\n      return '100%'\r\n    }\r\n\r\n    const getBlockComponent = props => {\r\n      switch (block.type) {\r\n        case BLOCK_TYPE.TEXT:\r\n          return <Text {...props} />\r\n        case BLOCK_TYPE.IMAGE:\r\n          return <Image {...props} />\r\n        case BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL:\r\n          return <TextImageHorizontal {...props} />\r\n        case BLOCK_TYPE.TEXT_IMAGE_VERTICAL:\r\n          return <TextImageVertical {...props} />\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`content-block content-block-type--${block.type}`}\r\n        style={{ width: getWidth(), height: getHeight() }}\r\n      >\r\n        {getBlockComponent({ block, cascade, getTextPartClass })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <FadeInContainer modes={modes}>\r\n      {renderBlockActions()}\r\n      {renderBlock()}\r\n    </FadeInContainer>\r\n  )\r\n}\r\n\r\nexport default Block\r\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n\n    '& + div': {\n      marginTop: theme.layout.lineHeight\n    }\n  }\n}))\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useTheme } from '@material-ui/core'\n\nimport { BLOCK_TYPE } from '../../constants'\n\nimport { joinClasses } from '../../helpers'\n\nimport Block from '../Block'\n\nimport { useStyles } from './BlocksGroup.style'\n\nconst BlocksGroup = props => {\n  const {\n    blocks,\n    allBlocksLength,\n    modes,\n    autoScroll,\n    cascade,\n    blockActions,\n    getTextPartClass\n  } = props\n\n  const theme = useTheme()\n\n  const classes = useStyles()\n\n  const { blockId } = useParams()\n\n  return (\n    <div className={classes.container}>\n      {blocks.map((block, blockIndex) => {\n        const style = {\n          width: theme.layout.getWidth(\n            block.params.width || block.params.textWidth\n          )\n        }\n\n        if (blocks.length > 1 && blockIndex > 0) {\n          style.marginLeft = theme.layout.grid.columnGutter\n        }\n\n        const isHighlightedBlock = blockId && block.id === blockId\n        const isNotHighlightedBlock = blockId && block.id !== blockId\n\n        const setCascadePosition = el => {\n          //! ПРОТЕСТИРОВАТЬ НА ВСЕХ ВИДАХ БЛОКОВ\n\n          if (!cascade || !el?.previousSibling) {\n            return\n          }\n\n          const getSiblingHeight = () => {\n            const getSiblingBounds = () => {\n              if (autoScroll) {\n                return el.previousSibling.childNodes[0].childNodes[0].getBoundingClientRect()\n              }\n\n              return el.previousSibling.childNodes[0].getBoundingClientRect()\n            }\n\n            const siblingBounds = getSiblingBounds()\n\n            return siblingBounds.height\n          }\n\n          const getSiblingMarginTop = () => {\n            return parseFloat(el.previousSibling.style.marginTop) || 0\n          }\n\n          const getImageHeight = () => {\n            if (block.type !== BLOCK_TYPE.TEXT_IMAGE_VERTICAL) {\n              return 0\n            }\n\n            const imageEl = el.querySelector('.image')\n            const imageBounds = imageEl.getBoundingClientRect()\n\n            return imageBounds.height\n          }\n\n          const marginTop =\n            getSiblingHeight() +\n            getSiblingMarginTop() -\n            theme.layout.lineHeight * 3 -\n            getImageHeight()\n\n          el.style.marginTop = `${marginTop}px`\n        }\n\n        return (\n          <div\n            key={blockIndex}\n            ref={setCascadePosition}\n            className={joinClasses(\n              'content-block-container',\n              isHighlightedBlock && 'highlighted-block',\n              isNotHighlightedBlock && 'not-highlighted-block'\n            )}\n            style={style}\n          >\n            <Block\n              block={block}\n              canMoveUp={block.index !== 0}\n              canMoveDown={block.index !== allBlocksLength - 1}\n              modes={modes}\n              cascade={cascade}\n              blockActions={blockActions}\n              getTextPartClass={getTextPartClass}\n            />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default BlocksGroup\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: `${theme.layout.getTop()} 0`\n  }\n}))\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useTheme, Button } from '@material-ui/core'\r\n\r\nimport { SCENARIO_MODE, BLOCK_TYPE } from '../../constants'\r\n\r\n// import { drawGaze, getGazePosition } from '../../services/gaze-service'\r\n\r\nimport BlocksGroup from '../BlocksGroup'\r\n\r\nimport { useStyles } from './Content.style'\r\n\r\nconst Content = props => {\r\n  const {\r\n    modes,\r\n    blocks,\r\n    autoScroll,\r\n    cascade,\r\n    blockActions,\r\n    finishViewing,\r\n    getTextPartClass\r\n  } = props\r\n\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n\r\n  const [contentElement, setContentElement] = useState(null)\r\n\r\n  // const addPointToGazeMap = () => {\r\n  //   let { x, y, r } = gazePosition.current\r\n\r\n  //   x = Math.round(x)\r\n  //   y -= Math.round(contentRef.current.getBoundingClientRect().top)\r\n\r\n  //   const pointsLength = Object.keys(gazeMap.current.points).length\r\n  //   const lastPoint =\r\n  //     gazeMap.current.points[\r\n  //       Object.keys(gazeMap.current.points)[pointsLength - 1]\r\n  //     ]\r\n\r\n  //   if (lastPoint) {\r\n  //     const dx = x - lastPoint.x\r\n  //     const dy = y - lastPoint.y\r\n  //     const d = Math.sqrt(dx * dx + dy * dy)\r\n\r\n  //     if (d <= r + lastPoint.r) return\r\n  //   }\r\n\r\n  //   gazeMap.current.points[new Date() - startDate.current] = {\r\n  //     x,\r\n  //     y,\r\n  //     r\r\n  //   }\r\n  // }\r\n\r\n  const blocksGroups = useMemo(() => {\r\n    const groups = []\r\n    let groupIndex = 0\r\n\r\n    blocks.forEach((block_, index) => {\r\n      const block = { ...block_, index }\r\n\r\n      if (!groups[groupIndex]) {\r\n        groups[groupIndex] = {\r\n          width: 0,\r\n          blocks: []\r\n        }\r\n      }\r\n\r\n      const blockWidth =\r\n        block.type === BLOCK_TYPE.TEXT\r\n          ? block.params.textWidth\r\n          : block.params.width\r\n      const currentGroup = groups[groupIndex]\r\n\r\n      if (\r\n        (blockWidth > theme.layout.grid.columnsNumber - 2 &&\r\n          currentGroup.width === 0) ||\r\n        currentGroup.width + blockWidth <= theme.layout.grid.columnsNumber\r\n      ) {\r\n        groups[groupIndex].width += blockWidth\r\n        groups[groupIndex].blocks.push(block)\r\n      } else {\r\n        groups.push({\r\n          width: blockWidth,\r\n          blocks: [block]\r\n        })\r\n        groupIndex++\r\n      }\r\n    })\r\n\r\n    return groups\r\n  }, [blocks, theme.layout.grid.columnsNumber])\r\n\r\n  const execWindowResizeEffect = () => {\r\n    if (!contentElement || !window.onresize) {\r\n      return\r\n    }\r\n\r\n    window.onresize()\r\n  }\r\n\r\n  useEffect(execWindowResizeEffect, [contentElement])\r\n\r\n  return (\r\n    <div ref={setContentElement} className={classes.container}>\r\n      {blocksGroups.map((blocksGroup, blocksGroupIndex) => {\r\n        return (\r\n          <BlocksGroup\r\n            key={blocksGroupIndex}\r\n            blocks={blocksGroup.blocks}\r\n            allBlocksLength={blocks.length}\r\n            modes={modes}\r\n            autoScroll={autoScroll}\r\n            cascade={cascade}\r\n            blockActions={blockActions}\r\n            getTextPartClass={getTextPartClass}\r\n          />\r\n        )\r\n      })}\r\n      {modes.includes(SCENARIO_MODE.VIEW) && (\r\n        <>\r\n          <div className=\"content-blocks-group\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disableElevation\r\n              onClick={finishViewing}\r\n            >\r\n              Закончить просмотр\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  containerSupport: {\n    position: 'relative',\n    width: '100%',\n    flex: '1',\n    maxWidth: theme.layout.maxWidth\n  }\n}))\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useTheme, Button } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport useAnimationFrame from 'use-animation-frame'\r\nimport { nanoid } from 'nanoid'\r\n\r\nimport {\r\n  SCENARIO_MODE,\r\n  TERM_CLASS_NAME,\r\n  WORD_CLASS_NAME\r\n} from '../../constants'\r\n\r\nimport { joinClasses, pickKeysFromObject } from '../../helpers'\r\n\r\nimport * as api from '../../api'\r\nimport * as monitoringApi from '../../api/monitoring'\r\n\r\nimport * as routing from '../../routing'\r\n\r\nimport useGaze from '../../hooks/useGaze'\r\nimport useAutoScroll from '../../hooks/useAutoScroll'\r\n\r\nimport { toggleAddBlockDialog } from '../../redux/BlockEditor/blockEditor.actions'\r\n\r\nimport Grid from '../../pages/LayoutEditorPage/components/Grid'\r\nimport Content from '../Content'\r\n\r\nimport { useStyles } from './ContentContainer.style'\r\n\r\nimport './ContentContainer.css'\r\n\r\nconst ContentContainer = props => {\r\n  const {\r\n    autoScroll,\r\n    blocks,\r\n    modes,\r\n    cascade,\r\n    containerWidth,\r\n    blockActions,\r\n    expandTerms,\r\n    getTextPartClass\r\n  } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const history = useHistory()\r\n\r\n  const theme = useTheme()\r\n\r\n  const classes = useStyles()\r\n\r\n  const doMonitoring = modes.includes(SCENARIO_MODE.VIEW)\r\n\r\n  const { gaze, onGazeMove } = useGaze({ doMonitoring })\r\n\r\n  const {\r\n    containerSupportRef,\r\n    setContentContainer,\r\n    isGazeInsideGazeSpace,\r\n    scroll\r\n  } = useAutoScroll({\r\n    gaze\r\n  })\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      monitoringApi.clearState()\r\n    }\r\n  }, [])\r\n\r\n  const getTermToExpand = () => {\r\n    const getElementsByClassName = className => {\r\n      return Object.fromEntries(\r\n        [...document.querySelectorAll(`.${className}`)].map(word => {\r\n          const { x, y, width, height } = word.getBoundingClientRect()\r\n\r\n          return [word.id, { x, y, w: width, h: height }]\r\n        })\r\n      )\r\n    }\r\n\r\n    const contentMarkup = {\r\n      terms: getElementsByClassName(TERM_CLASS_NAME),\r\n      words: getElementsByClassName(WORD_CLASS_NAME)\r\n    }\r\n\r\n    const { top, left } = containerSupportRef.current.getBoundingClientRect()\r\n    const termsToExpand = monitoringApi.getTermsToExpand(\r\n      { ...gaze, top, left },\r\n      contentMarkup\r\n    )\r\n\r\n    if (!termsToExpand.length) {\r\n      return\r\n    }\r\n\r\n    expandTerms(termsToExpand)\r\n  }\r\n\r\n  useAnimationFrame(() => {\r\n    if (!doMonitoring) {\r\n      return\r\n    }\r\n\r\n    // if (!isGazeInsideGazeSpace() || !gaze.isMoving) {\r\n    //   return\r\n    // }\r\n\r\n    if (!gaze.isMoving) {\r\n      return\r\n    }\r\n\r\n    scroll()\r\n\r\n    gaze.isMoving = false\r\n\r\n    getTermToExpand()\r\n  })\r\n\r\n  const finishViewing = () => {\r\n    const record = {\r\n      id: nanoid(),\r\n      date: Date.now(),\r\n      layout: pickKeysFromObject(\r\n        theme.layout,\r\n        Object.keys(api.STORAGE_ITEM_INITIAL_VALUE[api.STORAGE_ITEM.LAYOUT])\r\n      ),\r\n      containerWidth: containerSupportRef.current.clientWidth,\r\n      blocks,\r\n      monitoringData: monitoringApi.getMonitoringData()\r\n    }\r\n\r\n    api.addMonitoringRecord(record)\r\n    history.replace(routing.ROUTE_SCENARIOS)\r\n  }\r\n\r\n  const renderContent = () => {\r\n    if (!blocks.length) {\r\n      return (\r\n        <Button\r\n          startIcon={<Add />}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(toggleAddBlockDialog())}\r\n        >\r\n          Добавить блок\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    const sortBlocks = () => {\r\n      return blocks.sort((b1, b2) => {\r\n        return b1.order - b2.order\r\n      })\r\n    }\r\n\r\n    const renderGrid = () => {\r\n      if (!modes.includes(SCENARIO_MODE.EXAMPLE)) {\r\n        return null\r\n      }\r\n\r\n      return <Grid />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          ref={containerSupportRef}\r\n          id=\"contentWidth\"\r\n          className={classes.containerSupport}\r\n          style={containerWidth ? { width: `${containerWidth}px` } : {}}\r\n        >\r\n          {renderGrid()}\r\n          <Content\r\n            modes={modes}\r\n            blocks={sortBlocks()}\r\n            autoScroll={autoScroll}\r\n            cascade={cascade}\r\n            blockActions={blockActions}\r\n            finishViewing={finishViewing}\r\n            getTextPartClass={getTextPartClass}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={setContentContainer}\r\n        id=\"contentHeight\"\r\n        className={joinClasses(\r\n          'content-container',\r\n          autoScroll && 'auto-scroll-content',\r\n          ...modes\r\n        )}\r\n        style={{\r\n          justifyContent: blocks?.length ? 'flex-start' : 'center'\r\n        }}\r\n        // onMouseMove={onGazeMove}\r\n      >\r\n        {renderContent()}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContentContainer\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    background: '#64b5f6',\r\n  },\r\n}));\r\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from 'nanoid'\nimport {\n  useTheme,\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText\n} from '@material-ui/core'\nimport {\n  Notes,\n  Image,\n  VerticalSplit,\n  HorizontalSplit\n} from '@material-ui/icons'\n\nimport { GOLDEN_RATIO, BLOCK_TYPE } from '../../../../constants'\n\nimport * as routing from '../../../../routing'\n\nimport { toggleAddBlockDialog } from '../../../../redux/BlockEditor/blockEditor.actions'\n\nimport { useStyles } from './AddBlockDialog.style'\n\nconst blocks = [\n  {\n    type: BLOCK_TYPE.TEXT,\n    name: 'Текст',\n    icon: <Notes />\n  },\n  {\n    type: BLOCK_TYPE.IMAGE,\n    name: 'Изображение',\n    icon: <Image />\n  },\n  {\n    type: BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL,\n    name: 'Текст и изображение по горизонтали',\n    icon: <VerticalSplit />\n  },\n  {\n    type: BLOCK_TYPE.TEXT_IMAGE_VERTICAL,\n    name: 'Текст и изображение по вертикали',\n    icon: <HorizontalSplit style={{ transform: 'rotate(180deg)' }} />\n  }\n]\n\nconst getRandomImageSrc = () => {\n  const links = [\n    './assets/block-image-1.jpg',\n    './assets/block-image-2.jpg',\n    './assets/block-image-3.jpg'\n  ]\n\n  return links[Math.floor(Math.random() * links.length)]\n}\n\nconst AddBlockDialog = props => {\n  const { scenario, setScenarioBlocks } = props\n\n  const theme = useTheme()\n\n  const history = useHistory()\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const blockEditorState = useSelector(state => state.blockEditor)\n  const { addBlockDialog } = blockEditorState\n\n  const onClose = () => {\n    dispatch(toggleAddBlockDialog())\n  }\n\n  const onAddBlock = type => {\n    const block = {\n      id: nanoid(),\n      order: addBlockDialog.order || 0,\n      type,\n      params: {}\n    }\n\n    if (type.includes(BLOCK_TYPE.IMAGE)) {\n      block.image = {\n        src: getRandomImageSrc(),\n        size: 'cover'\n      }\n\n      if (type === BLOCK_TYPE.IMAGE) {\n        block.params.width = theme.layout.grid.columnsNumber\n      }\n\n      if (type === BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL) {\n        block.image.height = 0\n      } else {\n        block.image.height = 8\n      }\n    }\n\n    if (type.includes(BLOCK_TYPE.TEXT)) {\n      block.title = 'Заголовок информационного блока'\n      block.text = ['Основной текст информационного блока']\n\n      if (type === BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL) {\n        block.params.width = theme.layout.grid.columnsNumber\n        block.params.textWidth = Math.floor(GOLDEN_RATIO * block.params.width)\n      } else if (type === BLOCK_TYPE.TEXT_IMAGE_VERTICAL) {\n        block.params.width = Math.floor(theme.layout.grid.columnsNumber / 2)\n      } else {\n        block.params.textWidth = theme.layout.grid.columnsNumber\n      }\n    }\n\n    // change order of other blocks\n\n    const getReorderedBlocks = () => {\n      if (!addBlockDialog.direction) {\n        return scenario.blocks\n      }\n\n      return scenario.blocks.map(_block => {\n        if (addBlockDialog.direction > 0 && _block.order <= block.order) {\n          return { ..._block, order: _block.order - 1 }\n        }\n\n        if (addBlockDialog.direction < 0 && _block.order >= block.order) {\n          return { ..._block, order: _block.order + 1 }\n        }\n\n        return _block\n      })\n    }\n\n    const reorderedBlocks = getReorderedBlocks()\n\n    setScenarioBlocks([...reorderedBlocks, block])\n    onClose()\n\n    history.push(routing.getRouteToBlockEditor(scenario.id, block.id))\n  }\n\n  return (\n    <Dialog open={addBlockDialog.show} onClose={onClose}>\n      <DialogTitle>Добавление блока</DialogTitle>\n      <List>\n        {blocks.map(block => (\n          <ListItem\n            key={block.type}\n            button\n            onClick={() => onAddBlock(block.type)}\n          >\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>{block.icon}</Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={block.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  )\n}\n\nexport default AddBlockDialog\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { SCENARIO_MODE } from '../../constants'\r\n\r\nimport * as routing from '../../routing'\r\n\r\nimport * as contentApi from '../../api/content'\r\n\r\nimport { getScenarioById } from '../../redux/Scenarios/scenarios.actions'\r\nimport { getTermById } from '../../redux/Thesaurus/thesaurus.actions'\r\n\r\nimport ContentContainer from '../ContentContainer'\r\nimport AddBlockDialog from '../../pages/ScenarioEditorPage/components/AddBlockDialog'\r\n\r\nconst Scenario = props => {\r\n  const {\r\n    scenario,\r\n    modes,\r\n    autoScroll,\r\n    cascade,\r\n    containerWidth,\r\n    blockActions,\r\n    setScenarioBlocks,\r\n    getTextPartClass\r\n  } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const thesaurus = useSelector(state => state.thesaurus)\r\n\r\n  const { scenarioId } = useParams()\r\n\r\n  const [blocks, setBlocks] = useState(null)\r\n\r\n  const setBlocksEffect = () => {\r\n    if (scenario || blocks) {\r\n      return\r\n    }\r\n\r\n    const _scenario = dispatch(getScenarioById(scenarioId))\r\n\r\n    if (!_scenario) {\r\n      setBlocks(undefined)\r\n      return\r\n    }\r\n\r\n    const result = contentApi.splitContentBlocksIntoWords(\r\n      Object.fromEntries(\r\n        _scenario.blocks\r\n          .filter(block => {\r\n            return block.text\r\n          })\r\n          .map(block => {\r\n            return [block.id, block.text]\r\n          })\r\n      ),\r\n      thesaurus,\r\n      !modes.includes(SCENARIO_MODE.EXAMPLE)\r\n    )\r\n    const splittedBlocks = _scenario.blocks.map(block => {\r\n      const blockText = result[block.id]\r\n\r\n      if (!blockText) {\r\n        return block\r\n      }\r\n\r\n      return { ...block, text: blockText }\r\n    })\r\n\r\n    setBlocks(splittedBlocks)\r\n  }\r\n\r\n  useEffect(setBlocksEffect, [\r\n    blocks,\r\n    dispatch,\r\n    modes,\r\n    scenario,\r\n    scenarioId,\r\n    thesaurus\r\n  ])\r\n\r\n  const _blocks = scenario?.blocks || blocks\r\n\r\n  if (!_blocks) {\r\n    if (_blocks === undefined) {\r\n      return <Redirect to={routing.ROUTE_SCENARIOS} />\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  const expandTerms = terms => {\r\n    setBlocks(\r\n      _blocks.map(block => {\r\n        if (!block.text) {\r\n          return block\r\n        }\r\n\r\n        const getText = () => {\r\n          //! MUTATION\r\n\r\n          const text = JSON.parse(JSON.stringify(block.text))\r\n\r\n          for (let i = 0; i < terms.length; i++) {\r\n            const [blockId, paragraphIndex, termId] = terms[i].split('__')\r\n\r\n            if (block.id !== blockId) {\r\n              continue\r\n            }\r\n\r\n            const term = dispatch(getTermById(termId))\r\n            const splittedTerm = {\r\n              ...term,\r\n              definition: contentApi.splitTextIntoParts(\r\n                term.definition,\r\n                thesaurus,\r\n                true\r\n              )\r\n            }\r\n\r\n            text.splice(parseInt(paragraphIndex) + 1, 0, splittedTerm)\r\n          }\r\n\r\n          return text\r\n        }\r\n\r\n        return {\r\n          ...block,\r\n          text: getText()\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ContentContainer\r\n        autoScroll={autoScroll}\r\n        blocks={_blocks}\r\n        modes={modes}\r\n        cascade={cascade}\r\n        containerWidth={containerWidth}\r\n        blockActions={blockActions}\r\n        expandTerms={expandTerms}\r\n        getTextPartClass={getTextPartClass}\r\n      />\r\n      {modes.includes(SCENARIO_MODE.EDIT) && (\r\n        <AddBlockDialog\r\n          scenario={scenario}\r\n          setScenarioBlocks={setScenarioBlocks}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Scenario\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useTheme } from '@material-ui/core'\n\nimport { GOLDEN_RATIO, SCENARIO_MODE, BLOCK_TYPE } from '../../constants'\n\nimport * as contentApi from '../../api/content'\n\nimport LayoutEditor from './components/LayoutEditor'\nimport Scenario from '../../components/Scenario'\n\nconst LayoutEditorPage = () => {\n  const thesaurus = useSelector(state => state.thesaurus)\n\n  const theme = useTheme()\n\n  const exampleScenario = {\n    blocks: [\n      {\n        type: BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL,\n        title: 'Заголовок информационного блока',\n        text: [\n          'Компьютеры коренным образом изменили жизнь каждого человека. Несколько десятилетий назад люди даже не знали ничего об этих электронных устройствах, тогда как в наши дни даже маленький ребенок может управлять этой машиной. Почти все современные технологии зависит от компьютеров, которые используются для хранения данных: файлов, секретной информации, банковских операций и прочего.',\n          'Сегодня люди не представляют свою жизнь без современных технологий, в частности, без компьютера.',\n          'Но проблема в том, что вместе с положительным эффектом, компьютеры оказывают негативное влияние на человека.'\n        ].map(p => {\n          return contentApi.splitTextIntoParts(p, thesaurus, false)\n        }),\n        image: {\n          src: './assets/block-image-1.jpg',\n          height: 0,\n          size: 'cover'\n        },\n        params: {\n          width: theme.layout.grid.columnsNumber,\n          textWidth: Math.floor(GOLDEN_RATIO * theme.layout.grid.columnsNumber)\n        }\n      }\n    ]\n  }\n\n  return (\n    <>\n      <LayoutEditor />\n      <Scenario scenario={exampleScenario} modes={[SCENARIO_MODE.EXAMPLE]} />\n    </>\n  )\n}\n\nexport default LayoutEditorPage\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nimport * as routing from '../../../../routing'\r\n\r\nimport { updateScenario } from '../../../../redux/Scenarios/scenarios.actions'\r\n\r\nimport LeftDrawer from '../../../../ui/LeftDrawer'\r\n\r\nimport { useStyles } from '../../../../ui/LeftDrawer/LeftDrawer.style'\r\n\r\nconst ScenarioEditor = props => {\r\n  const { scenario, isScenarioChanged, setInitialScenario, setScenario } = props\r\n\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const onScenarioTitleChange = e => {\r\n    setScenario({ ...scenario, title: e.target.value })\r\n  }\r\n\r\n  const onSave = () => {\r\n    dispatch(updateScenario(scenario))\r\n    setInitialScenario(scenario)\r\n  }\r\n\r\n  return (\r\n    <LeftDrawer\r\n      header={{\r\n        title: 'Редактирование сценария',\r\n        backRoute: routing.ROUTE_ADMIN,\r\n        saveButton: {\r\n          disabled: !isScenarioChanged,\r\n          onSave\r\n        }\r\n      }}\r\n    >\r\n      <div className={classes.drawerItem}>\r\n        <div className={classes.drawerItemParam}>\r\n          <div className={classes.drawerItemParam}>\r\n            <TextField\r\n              label=\"Название сценария\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={scenario.title}\r\n              onChange={onScenarioTitleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </LeftDrawer>\r\n  )\r\n}\r\n\r\nexport default ScenarioEditor\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport {\r\n  useTheme,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  Divider\r\n} from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { get as lodashGet, set as lodashSet } from 'lodash'\r\n\r\nimport {\r\n  GOLDEN_RATIO_SMALL,\r\n  GOLDEN_RATIO,\r\n  FORMAT_TAG,\r\n  BLOCK_TYPE\r\n} from '../../../../constants'\r\n\r\nimport * as routing from '../../../../routing'\r\n\r\nimport LeftDrawer from '../../../../ui/LeftDrawer'\r\nimport Slider from '../../../../ui/Slider'\r\n\r\nimport { useStyles } from '../../../../ui/LeftDrawer/LeftDrawer.style'\r\n\r\nconst BlockEditor = props => {\r\n  const { block, blockActions } = props\r\n\r\n  const theme = useTheme()\r\n\r\n  const classes = useStyles()\r\n\r\n  const { scenarioId } = useParams()\r\n\r\n  const onBlockParamChange = (param, value) => {\r\n    const prevValue = lodashGet(block, param)\r\n\r\n    if (value === prevValue) {\r\n      return\r\n    }\r\n\r\n    const changedBlock = lodashSet(\r\n      JSON.parse(JSON.stringify(block)),\r\n      param,\r\n      value\r\n    )\r\n\r\n    blockActions.updateParams(changedBlock)\r\n  }\r\n\r\n  return (\r\n    <LeftDrawer\r\n      header={{\r\n        title: 'Редактирование блока',\r\n        backRoute: routing.getRouteToScenarioEditor(scenarioId),\r\n        saveButton: {\r\n          message:\r\n            'Сохранение блоков происходит после сохранения самого сценария.'\r\n        }\r\n      }}\r\n    >\r\n      <div className={classes.drawerItem}>\r\n        <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n          Представление блока\r\n        </Typography>\r\n        <div className={classes.drawerItemParam}>\r\n          <Typography variant=\"body1\">Ширина блока</Typography>\r\n          <Slider\r\n            value={block.params.width || block.params.textWidth}\r\n            step={1}\r\n            marks={[\r\n              {\r\n                value: 4\r\n              },\r\n              {\r\n                value: theme.layout.grid.columnsNumber\r\n              }\r\n            ]}\r\n            onChange={(e, value) =>\r\n              onBlockParamChange(\r\n                block.params.width ? 'params.width' : 'params.textWidth',\r\n                value\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n        {block.type === BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL && (\r\n          <div className={classes.drawerItemParam}>\r\n            <Typography variant=\"body1\">\r\n              Отношение ширины текста и изображения\r\n            </Typography>\r\n            <Slider\r\n              value={block.params.textWidth}\r\n              step={1}\r\n              marks={[\r\n                {\r\n                  value: 0,\r\n                  label: 'Текст'\r\n                },\r\n                {\r\n                  value: Math.floor(GOLDEN_RATIO_SMALL * block.params.width),\r\n                  label: 'Золотое_сечение'\r\n                },\r\n                {\r\n                  value: Math.floor(GOLDEN_RATIO * block.params.width),\r\n                  label: 'Золотое_сечение'\r\n                },\r\n                {\r\n                  value: block.params.width,\r\n                  label: 'Изображение'\r\n                }\r\n              ]}\r\n              onChange={(e, value) =>\r\n                onBlockParamChange('params.textWidth', value)\r\n              }\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Divider />\r\n      {block.type.includes(BLOCK_TYPE.TEXT) && (\r\n        <>\r\n          <div className={classes.drawerItem}>\r\n            <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n              Текстовое наполнение\r\n            </Typography>\r\n            <Alert className={classes.info} severity=\"info\">\r\n              <AlertTitle>Использование тегов</AlertTitle>\r\n              Для форматирования основного текста доступны следующие теги:\r\n              <div style={{ marginTop: '8px' }}>\r\n                <Typography variant=\"body2\">\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"subtitle2\"\r\n                    // style={{ color: '#2196f3' }}\r\n                  >\r\n                    {FORMAT_TAG.INFO}\r\n                  </Typography>\r\n                  &nbsp;&mdash; информация\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"subtitle2\"\r\n                    // style={{ color: '#ff9800' }}\r\n                  >\r\n                    {FORMAT_TAG.WARNING}\r\n                  </Typography>\r\n                  &nbsp;&mdash; предупреждение\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"subtitle2\"\r\n                    // style={{ color: '#f44336' }}\r\n                  >\r\n                    {FORMAT_TAG.ERROR}\r\n                  </Typography>\r\n                  &nbsp;&mdash; ошибка\r\n                </Typography>\r\n              </div>\r\n            </Alert>\r\n            <div className={classes.drawerItemParam}>\r\n              <TextField\r\n                label=\"Заголовок\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={block.title}\r\n                onChange={e => onBlockParamChange('title', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={classes.drawerItemParam}>\r\n              <TextField\r\n                label=\"Основной текст\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={block.text.join('\\n')}\r\n                onChange={e =>\r\n                  onBlockParamChange('text', e.target.value.split('\\n'))\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          {block.type.includes(`${BLOCK_TYPE.TEXT}-${BLOCK_TYPE.IMAGE}`) && (\r\n            <Divider />\r\n          )}\r\n        </>\r\n      )}\r\n      {block.type.includes(BLOCK_TYPE.IMAGE) && (\r\n        <div className={classes.drawerItem}>\r\n          <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n            Изображение\r\n          </Typography>\r\n          <div className={classes.drawerItemParam}>\r\n            <TextField\r\n              label=\"Ссылка\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={block.image.src}\r\n              onChange={e => onBlockParamChange('image.src', e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={classes.drawerItemParam}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel id=\"block-image-size\">Масштаб</InputLabel>\r\n              <Select\r\n                labelId=\"block-image-size\"\r\n                label=\"Масштаб\"\r\n                value={block.image.size || 'cover'}\r\n                onChange={e => onBlockParamChange('image.size', e.target.value)}\r\n              >\r\n                <MenuItem value=\"cover\">Заполнение</MenuItem>\r\n                <MenuItem value=\"contain\">Целиком</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          {block.type === BLOCK_TYPE.TEXT_IMAGE_HORIZONTAL && (\r\n            <div className={classes.drawerItemParam}>\r\n              <FormControl variant=\"outlined\" fullWidth>\r\n                <InputLabel id=\"block-image-position\">\r\n                  Позиционирование\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"block-image-position\"\r\n                  label=\"Позиционирование\"\r\n                  value={block.image.position || 'right'}\r\n                  onChange={e =>\r\n                    onBlockParamChange('image.position', e.target.value)\r\n                  }\r\n                >\r\n                  <MenuItem value=\"right\">Справа</MenuItem>\r\n                  <MenuItem value=\"left\">Слева</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          )}\r\n          <div className={classes.drawerItemParam}>\r\n            <Typography variant=\"body1\">Высота изображения</Typography>\r\n            <Slider\r\n              value={block.image.height || 0}\r\n              step={1}\r\n              marks={[\r\n                {\r\n                  value: 0,\r\n                  label: 'Авто'\r\n                },\r\n                {\r\n                  value: 16\r\n                }\r\n              ]}\r\n              onChange={(e, value) => onBlockParamChange('image.height', value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </LeftDrawer>\r\n  )\r\n}\r\n\r\nexport default BlockEditor\r\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from 'react-router'\nimport { useDispatch } from 'react-redux'\n\nimport { SCENARIO_MODE } from '../../constants'\n\nimport * as routing from '../../routing'\n\nimport { getScenarioById } from '../../redux/Scenarios/scenarios.actions'\n\nimport ScenarioEditor from './components/ScenarioEditor'\nimport BlockEditor from './components/BlockEditor'\nimport Scenario from '../../components/Scenario'\n\nconst ScenarioEditorPage = () => {\n  const dispatch = useDispatch()\n\n  const { scenarioId, blockId } = useParams()\n\n  const [initialScenario, setInitialScenario] = useState(null)\n  const [scenario, setScenario] = useState(null)\n\n  const getScenarioEffect = () => {\n    if (scenario) {\n      return\n    }\n\n    const scenario_ = dispatch(getScenarioById(scenarioId))\n\n    setInitialScenario(scenario_)\n    setScenario(scenario_)\n  }\n\n  useEffect(getScenarioEffect, [dispatch, scenario, scenarioId])\n\n  if (!scenario) {\n    if (scenario === undefined) {\n      return <Redirect to={routing.ROUTE_ADMIN} />\n    }\n\n    return null\n  }\n\n  const isScenarioChanged =\n    JSON.stringify(initialScenario) !== JSON.stringify(scenario)\n\n  const setScenarioBlocks = blocks => {\n    setScenario({ ...scenario, blocks })\n  }\n\n  const setScenarioBlock = block => {\n    setScenarioBlocks(\n      scenario.blocks.map(_block => {\n        if (_block.id !== block.id) {\n          return _block\n        }\n\n        return block\n      })\n    )\n  }\n\n  const deleteScenarioBlock = block => {\n    setScenarioBlocks(\n      scenario.blocks.filter(_block => {\n        return _block.id !== block.id\n      })\n    )\n  }\n\n  const swapBlocks = (block1, block2) => {\n    setScenarioBlocks(\n      scenario.blocks.map(block => {\n        if (block.id === block1.id) {\n          return { ...block, order: block2.order }\n        }\n\n        if (block.id === block2.id) {\n          return { ...block, order: block1.order }\n        }\n\n        return block\n      })\n    )\n  }\n\n  const moveScenarioBlockUp = block => {\n    const blockBefore = scenario.blocks\n      .sort((b1, b2) => {\n        return b2.order - b1.order\n      })\n      .find(_block => {\n        return _block.order < block.order\n      })\n\n    if (blockBefore) {\n      swapBlocks(block, blockBefore)\n    }\n  }\n\n  const moveScenarioBlockDown = block => {\n    const blockAfter = scenario.blocks\n      .sort((b1, b2) => {\n        return b1.order - b2.order\n      })\n      .find(_block => {\n        return _block.order > block.order\n      })\n\n    if (blockAfter) {\n      swapBlocks(block, blockAfter)\n    }\n  }\n\n  const blockActions = {\n    updateParams: setScenarioBlock,\n    delete: deleteScenarioBlock,\n    moveUp: moveScenarioBlockUp,\n    moveDown: moveScenarioBlockDown\n  }\n\n  const renderSidebar = () => {\n    if (blockId) {\n      const block = scenario.blocks.find(block => {\n        return block.id === blockId\n      })\n\n      if (!block) {\n        return <Redirect to={routing.getRouteToScenarioEditor(scenarioId)} />\n      }\n\n      return <BlockEditor block={block} blockActions={blockActions} />\n    }\n\n    return (\n      <ScenarioEditor\n        scenario={scenario}\n        isScenarioChanged={isScenarioChanged}\n        setInitialScenario={setInitialScenario}\n        setScenario={setScenario}\n      />\n    )\n  }\n\n  return (\n    <>\n      {renderSidebar()}\n      <Scenario\n        scenario={scenario}\n        modes={[SCENARIO_MODE.EDIT]}\n        blockActions={blockActions}\n        setScenarioBlocks={setScenarioBlocks}\n      />\n    </>\n  )\n}\n\nexport default ScenarioEditorPage\n","import React from 'react'\nimport { Alert } from '@material-ui/lab'\n\nimport * as routing from '../../../../routing'\n\nimport LeftDrawer from '../../../../ui/LeftDrawer'\n\nimport { useStyles } from '../../../../ui/LeftDrawer/LeftDrawer.style'\n\nconst ThesaurusSidebar = () => {\n  const classes = useStyles()\n\n  return (\n    <LeftDrawer\n      header={{\n        title: 'Тезаурус',\n        backRoute: routing.ROUTE_ADMIN,\n        saveButton: {\n          disabled: true,\n          onSave: () => {}\n        }\n      }}\n    >\n      <div className={classes.drawerItem}>\n        <Alert className={classes.info} severity=\"info\">\n          Дополнительный функционал в разработке.\n        </Alert>\n      </div>\n    </LeftDrawer>\n  )\n}\n\nexport default ThesaurusSidebar\n","import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button\n} from '@material-ui/core'\n\nconst UpdateDialog = props => {\n  const { isOpened, title, children, onClose, onUpdate } = props\n\n  const _onUpdate = () => {\n    if (!onUpdate()) {\n      return\n    }\n\n    onClose()\n  }\n\n  return (\n    <Dialog open={isOpened} fullWidth onClose={onClose}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={_onUpdate}>\n          Изменить\n        </Button>\n        <Button color=\"default\" onClick={onClose}>\n          Отмена\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default UpdateDialog\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 4),\n    flex: 1\n  },\n  header: {\n    marginBottom: theme.spacing(2)\n  },\n  cards: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > div': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      margin: theme.spacing(0, 1, 1, 0)\n    }\n  }\n}))\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Box, Button, TextField, CircularProgress } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport { Add } from '@material-ui/icons'\nimport { useDebouncedCallback } from 'use-debounce'\n\nimport * as contentApi from '../../../../api/content'\n\nimport {\n  addTerm,\n  updateTerm\n} from '../../../../redux/Thesaurus/thesaurus.actions'\n\nimport AddDialog from '../../../../ui/AddDialog'\nimport UpdateDialog from '../../../../ui/UpdateDialog'\nimport TermCard from '../../../../ui/TermCard'\n\nimport { useStyles } from './Terms.style'\n\nconst EMPTY_TERM = {\n  id: '',\n  term: '',\n  synonym: '',\n  synonyms: [],\n  definition: ''\n}\nconst TERM_DIALOG_INITIAL_STATE = {\n  dialogType: null,\n  errors: {},\n  ...EMPTY_TERM\n}\nconst TERM_DIALOG_TYPE = {\n  ADD_TERM: 'ADD_TERM',\n  UPDATE_TERM: 'UPDATE_TERM'\n}\nconst TERM_SYNONYM_OPTIONS_INITIAL_STATE = []\n\nconst Terms = () => {\n  const classes = useStyles()\n\n  const dispatch = useDispatch()\n\n  const thesaurus = useSelector(state => state.thesaurus)\n\n  const [termDialogState, setTermDialogState] = useState(\n    TERM_DIALOG_INITIAL_STATE\n  )\n  const [termSynonymOptions, setTermSynonymOptions] = useState(\n    TERM_SYNONYM_OPTIONS_INITIAL_STATE\n  )\n\n  const getTermSynonymOptions = async term => {\n    const synonyms = await contentApi.getTermSynonyms(term)\n\n    setTermSynonymOptions(synonyms)\n  }\n\n  const getDebouncedTermSynonymOptions = useDebouncedCallback(\n    getTermSynonymOptions,\n    1000\n  )\n\n  const onTermDialogOpen = (_term = EMPTY_TERM) => {\n    const { id, term, synonyms, definition } = _term\n    const dialogType = id\n      ? TERM_DIALOG_TYPE.UPDATE_TERM\n      : TERM_DIALOG_TYPE.ADD_TERM\n\n    if (dialogType === TERM_DIALOG_TYPE.ADD_TERM) {\n      setTermSynonymOptions(TERM_SYNONYM_OPTIONS_INITIAL_STATE)\n    } else if (dialogType === TERM_DIALOG_TYPE.UPDATE_TERM) {\n      getDebouncedTermSynonymOptions(term)\n    }\n\n    setTermDialogState({\n      dialogType,\n      id,\n      term,\n      synonym: '',\n      synonyms,\n      definition,\n      errors: {}\n    })\n  }\n\n  const onTermDialogClose = () => {\n    setTermDialogState(TERM_DIALOG_INITIAL_STATE)\n  }\n\n  const onTermDialogTermChange = e => {\n    const term = e.target.value\n\n    if (term) {\n      getDebouncedTermSynonymOptions(term)\n    } else {\n      setTermSynonymOptions(TERM_SYNONYM_OPTIONS_INITIAL_STATE)\n      getDebouncedTermSynonymOptions.cancel()\n    }\n\n    setTermDialogState({ ...termDialogState, term, errors: {} })\n  }\n\n  const onTermDialogDefinitionChange = e => {\n    setTermDialogState({\n      ...termDialogState,\n      definition: e.target.value,\n      errors: {}\n    })\n  }\n\n  const onTermDialogSynonymsChange = (e, synonyms) => {\n    setTermDialogState({ ...termDialogState, synonyms, errors: {} })\n  }\n\n  const onTermDialogSynonymChange = (e, synonym) => {\n    setTermDialogState({ ...termDialogState, synonym, errors: {} })\n  }\n\n  const onAddTerm = () => {\n    const result = dispatch(\n      addTerm({\n        term: termDialogState.term,\n        synonyms: termDialogState.synonyms,\n        definition: termDialogState.definition\n      })\n    )\n\n    if (result?.errors) {\n      setTermDialogState({ ...termDialogState, errors: result.errors })\n      return false\n    }\n\n    return true\n  }\n\n  const onUpdateTerm = () => {\n    const result = dispatch(\n      updateTerm({\n        id: termDialogState.id,\n        term: termDialogState.term,\n        synonyms: termDialogState.synonyms,\n        definition: termDialogState.definition\n      })\n    )\n\n    if (result?.errors) {\n      setTermDialogState({\n        ...termDialogState,\n        errors: result.errors\n      })\n      return false\n    }\n\n    return true\n  }\n\n  const areTermSynonymOptionsloading =\n    getDebouncedTermSynonymOptions.isPending()\n\n  const _getTermSynonymOptions = () => {\n    if (!termDialogState.synonym) {\n      return termSynonymOptions\n    }\n\n    const doesSynonymExist = termSynonymOptions.find(synonym => {\n      return synonym === termDialogState.synonym\n    })\n\n    if (doesSynonymExist) {\n      return termSynonymOptions\n    }\n\n    return [termDialogState.synonym, ...termSynonymOptions]\n  }\n\n  const renderTermDialogFields = () => {\n    return (\n      <>\n        <TextField\n          autoFocus\n          required\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          error={!!termDialogState.errors.term}\n          label=\"Термин\"\n          helperText={\n            termDialogState.errors.term ||\n            'В начальной форме: ед.ч., м.р., И.п., инфинитив'\n          }\n          value={termDialogState.term}\n          onChange={e => {\n            onTermDialogTermChange(e)\n          }}\n        />\n        <Autocomplete\n          multiple\n          value={termDialogState.synonyms}\n          onChange={onTermDialogSynonymsChange}\n          inputValue={termDialogState.synonym}\n          onInputChange={onTermDialogSynonymChange}\n          options={_getTermSynonymOptions()}\n          getOptionLabel={option => option}\n          filterSelectedOptions\n          renderInput={params => (\n            <TextField\n              {...params}\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Синонимы\"\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <>\n                    {areTermSynonymOptionsloading ? (\n                      <CircularProgress color=\"primary\" size={20} />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </>\n                )\n              }}\n            />\n          )}\n        />\n        <TextField\n          required\n          multiline\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          error={!!termDialogState.errors.definition}\n          label=\"Определение\"\n          value={termDialogState.definition}\n          helperText={termDialogState.errors.definition}\n          onChange={e => {\n            onTermDialogDefinitionChange(e)\n          }}\n        />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <AddDialog\n        isOpened={termDialogState.dialogType === TERM_DIALOG_TYPE.ADD_TERM}\n        title=\"Добавление термина\"\n        onAdd={onAddTerm}\n        onClose={onTermDialogClose}\n      >\n        {renderTermDialogFields()}\n      </AddDialog>\n      <UpdateDialog\n        isOpened={termDialogState.dialogType === TERM_DIALOG_TYPE.UPDATE_TERM}\n        title=\"Редактирование термина\"\n        onUpdate={onUpdateTerm}\n        onClose={onTermDialogClose}\n      >\n        {renderTermDialogFields()}\n      </UpdateDialog>\n      <Box className={classes.container}>\n        <Box className={classes.header}>\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<Add />}\n            onClick={() => {\n              onTermDialogOpen()\n            }}\n          >\n            Добавить термин\n          </Button>\n        </Box>\n        <Box className={classes.cards}>\n          {thesaurus.map(term => {\n            return (\n              <TermCard\n                key={term.id}\n                term={term}\n                showMenu\n                onTermDialogOpen={onTermDialogOpen}\n              />\n            )\n          })}\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default Terms\n","import React from 'react'\n\nimport ThesaurusSidebar from './components/ThesaurusSidebar'\nimport Terms from './components/Terms'\n\nconst ThesaurusPage = () => {\n  return (\n    <>\n      <ThesaurusSidebar />\n      <Terms />\n    </>\n  )\n}\n\nexport default ThesaurusPage\n","import React from 'react'\nimport { Typography, Switch, FormControlLabel } from '@material-ui/core'\n\nimport * as routing from '../../../../routing'\n\nimport LeftDrawer from '../../../../ui/LeftDrawer'\nimport Slider from '../../../../ui/Slider'\n\nimport { useStyles } from '../../../../ui/LeftDrawer/LeftDrawer.style'\n\nconst MonitoringRecordSidebar = props => {\n  const {\n    gazePlot,\n    gazePlotLimit,\n    isHeatmapVisible,\n    setGazePlotLimit,\n    setIsHeatmapVisible\n  } = props\n\n  const classes = useStyles()\n\n  const renderParams = () => {\n    if (!gazePlot) {\n      return null\n    }\n\n    const toggleHeatmap = () => {\n      setIsHeatmapVisible(!isHeatmapVisible)\n    }\n\n    return (\n      <div className={classes.drawerItem}>\n        <div className={classes.drawerItemParam}>\n          <Typography variant=\"body1\">Карта движения взгляда</Typography>\n          <Slider\n            value={gazePlotLimit}\n            step={1}\n            marks={[\n              {\n                value: 0\n              },\n              {\n                value: gazePlot.length\n              }\n            ]}\n            onChange={(e, value) => {\n              setGazePlotLimit(value)\n            }}\n          />\n        </div>\n        <div className={classes.drawerItemParam}>\n          <FormControlLabel\n            control={<Switch checked={isHeatmapVisible} color=\"primary\" />}\n            label=\"Тепловая карта\"\n            onChange={toggleHeatmap}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <LeftDrawer\n      header={{\n        title: 'Результаты мониторинга',\n        backRoute: routing.ROUTE_ADMIN\n      }}\n    >\n      {renderParams()}\n    </LeftDrawer>\n  )\n}\n\nexport default MonitoringRecordSidebar\n","import React, { useState, useEffect } from 'react'\nimport { Stage, Layer, Image, Circle, Path } from 'react-konva'\nimport h337 from 'heatmap.js'\n\nimport { getAngleBetweenPoints } from '../../../../helpers'\n\nconst GAZE_PLOT_CIRCLE = {\n  RADIUS: 10,\n  FILL: 'rgba(156, 39, 176, 0.2)',\n  STROKE: 'rgba(156, 39, 176, 0.5)'\n}\n\nconst MonitoringCanvas = props => {\n  const { contentScreenshot, gazePlot, gazePlotLimit, isHeatmapVisible } = props\n\n  const [stage, setStage] = useState(null)\n  const [heatmap, setHeatmap] = useState(null)\n\n  const createHeatmapEffect = () => {\n    if (!stage || heatmap) {\n      return\n    }\n\n    const heatmapInstance = h337.create({ container: stage.content })\n\n    heatmapInstance.setData({\n      max: 5,\n      data: gazePlot.map(gaze => {\n        return { x: Math.floor(gaze.x), y: Math.floor(gaze.y), value: 1 }\n      })\n    })\n\n    setHeatmap(heatmapInstance._renderer.canvas)\n  }\n\n  useEffect(createHeatmapEffect, [gazePlot, heatmap, stage])\n\n  const { width, height } = contentScreenshot\n\n  const renderGazePlot = () => {\n    if (isHeatmapVisible) {\n      return null\n    }\n\n    const _gazePlot = gazePlot.slice(0, gazePlotLimit)\n\n    return (\n      <>\n        <Path\n          stroke={GAZE_PLOT_CIRCLE.STROKE}\n          strokeWidth={1}\n          sceneFunc={(c, shape) => {\n            c.beginPath()\n\n            for (let i = 1; i < _gazePlot.length; i++) {\n              const prevGaze = gazePlot[i - 1]\n              const gaze = gazePlot[i]\n              const angle = getAngleBetweenPoints(prevGaze, gaze)\n\n              const p1 = {\n                x: prevGaze.x - GAZE_PLOT_CIRCLE.RADIUS * Math.cos(angle),\n                y: prevGaze.y - GAZE_PLOT_CIRCLE.RADIUS * Math.sin(angle)\n              }\n              const p2 = {\n                x: gaze.x + GAZE_PLOT_CIRCLE.RADIUS * Math.cos(angle),\n                y: gaze.y + GAZE_PLOT_CIRCLE.RADIUS * Math.sin(angle)\n              }\n\n              c.moveTo(p1.x, p1.y)\n              c.lineTo(p2.x, p2.y)\n            }\n\n            c.closePath()\n            c.strokeShape(shape)\n          }}\n        />\n        {_gazePlot.map((gaze, gazeIndex) => {\n          return (\n            <Circle\n              key={gazeIndex}\n              x={gaze.x}\n              y={gaze.y}\n              radius={GAZE_PLOT_CIRCLE.RADIUS}\n              fill={GAZE_PLOT_CIRCLE.FILL}\n              stroke={GAZE_PLOT_CIRCLE.STROKE}\n              strokeWidth={1}\n            />\n          )\n        })}\n      </>\n    )\n  }\n\n  const renderHeatmap = () => {\n    if (!heatmap || !isHeatmapVisible) {\n      return null\n    }\n\n    return <Image image={heatmap} />\n  }\n\n  return (\n    <Stage ref={setStage} width={width} height={height}>\n      <Layer>\n        <Image image={contentScreenshot} />\n        {renderGazePlot()}\n        {renderHeatmap()}\n      </Layer>\n    </Stage>\n  )\n}\n\nexport default MonitoringCanvas\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  canvasContainer: {\n    flex: 1,\n    overflow: 'auto',\n    '& .heatmap-canvas': {\n      display: 'none'\n    }\n  }\n}))\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { Box, CircularProgress } from '@material-ui/core'\nimport html2canvas from 'html2canvas'\n\nimport * as api from '../../api'\n\nimport * as routing from '../../routing'\n\nimport {\n  temporarySetLayout,\n  resetLayout\n} from '../../redux/Layout/layout.actions'\n\nimport MonitoringRecordSidebar from './components/MonitoringRecordSidebar'\nimport Scenario from '../../components/Scenario'\nimport MonitoringCanvas from './components/MonitoringCanvas'\n\nimport { useStyles } from './MonitoringRecordPage.style'\n\nconst MonitoringRecordPage = () => {\n  const dispatch = useDispatch()\n\n  const { monitoringRecordId } = useParams()\n\n  const classes = useStyles()\n\n  const [monitoringRecord, setMonitoringRecord] = useState(null)\n  const [contentScreenshot, setContentScreenshot] = useState(null)\n  const [gazePlotLimit, setGazePlotLimit] = useState(null)\n  const [isHeatmapVisible, setIsHeatmapVisible] = useState(false)\n\n  const fetchMonitoringRecordEffect = () => {\n    if (monitoringRecord) {\n      return\n    }\n\n    const _monitoringRecord = api.getMonitoringRecordById(monitoringRecordId)\n\n    if (_monitoringRecord) {\n      dispatch(temporarySetLayout(_monitoringRecord.layout))\n      setGazePlotLimit(_monitoringRecord.monitoringData.gazePlot.length)\n    }\n\n    setMonitoringRecord(_monitoringRecord)\n  }\n\n  useEffect(fetchMonitoringRecordEffect, [\n    dispatch,\n    monitoringRecord,\n    monitoringRecordId\n  ])\n\n  const resetLayoutEffect = () => {\n    return () => {\n      dispatch(resetLayout())\n    }\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(resetLayoutEffect, [])\n\n  const captureContentEffect = () => {\n    if (!monitoringRecord || contentScreenshot) {\n      return\n    }\n\n    //! В будущем заменить setTimout на флаг, определяющий полную прогрузку контента\n\n    setTimeout(() => {\n      html2canvas(document.querySelector('#contentWidth'), {\n        backgroundColor: null\n      }).then(canvas => {\n        setContentScreenshot(canvas)\n      })\n    }, 1000)\n  }\n\n  useEffect(captureContentEffect, [contentScreenshot, monitoringRecord])\n\n  if (!monitoringRecord) {\n    if (monitoringRecord === undefined) {\n      return <Redirect to={routing.ROUTE_ADMIN} />\n    }\n\n    return null\n  }\n\n  const getTextPartClass = id => {\n    const part = monitoringRecord.monitoringData.parts[id]\n\n    if (!part) {\n      return 'unread'\n    }\n\n    if (part.isRecognized) {\n      return 'recognized'\n    }\n\n    return 'unrecognized'\n  }\n\n  const getContainerStyle = () => {\n    if (contentScreenshot) {\n      return {}\n    }\n\n    return {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }\n\n  const getGazePlot = () => {\n    if (gazePlotLimit === null) {\n      return null\n    }\n\n    return monitoringRecord.monitoringData.gazePlot\n  }\n\n  const gazePlot = getGazePlot()\n\n  const renderCanvas = () => {\n    if (!contentScreenshot) {\n      return <CircularProgress />\n    }\n\n    return (\n      <MonitoringCanvas\n        contentScreenshot={contentScreenshot}\n        gazePlot={gazePlot}\n        gazePlotLimit={gazePlotLimit}\n        isHeatmapVisible={isHeatmapVisible}\n      />\n    )\n  }\n\n  return (\n    <>\n      <MonitoringRecordSidebar\n        gazePlot={gazePlot}\n        gazePlotLimit={gazePlotLimit}\n        isHeatmapVisible={isHeatmapVisible}\n        setGazePlotLimit={setGazePlotLimit}\n        setIsHeatmapVisible={setIsHeatmapVisible}\n      />\n      <Box className={classes.canvasContainer} style={getContainerStyle()}>\n        {renderCanvas()}\n      </Box>\n      <div style={{ width: 0 }}>\n        {!contentScreenshot && (\n          <Scenario\n            scenario={{\n              blocks: monitoringRecord.blocks\n            }}\n            modes={['monitoring-record']}\n            cascade\n            containerWidth={monitoringRecord.containerWidth}\n            getTextPartClass={getTextPartClass}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default MonitoringRecordPage\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport * as routing from '../../routing'\n\nimport AdminSidebar from './components/AdminSidebar'\nimport LayoutEditorPage from '../../pages/LayoutEditorPage'\nimport ScenarioEditorPage from '../../pages/ScenarioEditorPage'\nimport ThesaurusPage from '../../pages/ThesaurusPage'\nimport MonitoringRecordPage from '../MonitoringRecordPage'\n\nimport './AdminPage.css'\n\nconst AdminPage = () => {\n  return (\n    <div className=\"admin\">\n      <Switch>\n        <Route exact path={routing.ROUTE_ADMIN}>\n          <AdminSidebar />\n        </Route>\n        <Route exact path={routing.ROUTE_LAYOUT_EDITOR}>\n          <LayoutEditorPage />\n        </Route>\n        <Route\n          exact\n          path={[routing.ROUTE_SCENARIO_EDITOR, routing.ROUTE_BLOCK_EDITOR]}\n        >\n          <ScenarioEditorPage />\n        </Route>\n        <Route exact path={routing.ROUTE_THESAURUS}>\n          <ThesaurusPage />\n        </Route>\n        <Route exact path={routing.ROUTE_MONITORING_RECORD}>\n          <MonitoringRecordPage />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default AdminPage\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  scenario: {\n    padding: theme.spacing(2),\n    lineHeight: 1\n  }\n}))\n","import React from 'react'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Grid, Button } from '@material-ui/core'\n\nimport { SCENARIO_MODE } from '../../constants'\n\nimport * as routing from '../../routing'\n\nimport Scenario from '../../components/Scenario'\n\nimport { useStyles } from './ScenariosPage.style'\n\nconst ScenariosPage = () => {\n  const scenarios = useSelector(state => state.scenarios)\n\n  const classes = useStyles()\n\n  return (\n    <Switch>\n      <Route exact path={routing.ROUTE_SCENARIO}>\n        <Scenario modes={[SCENARIO_MODE.VIEW]} autoScroll cascade />\n      </Route>\n      <Route>\n        <Grid\n          className={classes.root}\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            container\n            xs={12}\n            spacing={2}\n            justify=\"center\"\n            style={{ maxWidth: 1280 }}\n          >\n            {scenarios.map(scenario => (\n              <Grid key={scenario.id} item xs={4}>\n                <Button\n                  className={classes.scenario}\n                  variant=\"outlined\"\n                  component={Link}\n                  to={routing.getRouteToScenario(scenario.id)}\n                  fullWidth\n                >\n                  {scenario.title}\n                </Button>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Route>\n    </Switch>\n  )\n}\n\nexport default ScenariosPage\n","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport * as palette from '@material-ui/core/colors'\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: palette.blueGrey[500]\r\n      // main: '#2196f3'\r\n    },\r\n    background: {\r\n      default: palette.blueGrey[50]\r\n    }\r\n  },\r\n  zIndex: {\r\n    snackbar: 1299\r\n  }\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CssBaseline } from '@material-ui/core'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\n\r\nimport { GOLDEN_RATIO_BIG } from '../../constants'\r\n\r\nimport * as routing from '../../routing'\r\n\r\nimport { fetchLayout } from '../../redux/Layout/layout.actions'\r\nimport { fetchScenarios } from '../../redux/Scenarios/scenarios.actions'\r\nimport { fetchThesaurus } from '../../redux/Thesaurus/thesaurus.actions'\r\n\r\nimport Notification from '../../ui/Notification'\r\nimport Header from '../Header'\r\nimport AdminPage from '../../pages/AdminPage'\r\nimport ScenariosPage from '../../pages/ScenariosPage'\r\n\r\nimport { theme } from '../../theme'\r\n\r\nimport './App.css'\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const layout = useSelector(state => state.layout)\r\n  const scenarios = useSelector(state => state.scenarios)\r\n\r\n  const [contentContainerSizes, setContentContainerSizes] = useState({\r\n    width: 0,\r\n    height: 0\r\n  })\r\n\r\n  const setOnWindowResizeEffect = () => {\r\n    window.onresize = () => {\r\n      const contentWidthElement = document.querySelector('#contentWidth')\r\n      const contentHeightElement = document.querySelector('#contentHeight')\r\n\r\n      if (!contentWidthElement || !contentHeightElement) {\r\n        return\r\n      }\r\n\r\n      const { width } = contentWidthElement.getBoundingClientRect()\r\n      const { height } = contentHeightElement.getBoundingClientRect()\r\n\r\n      if (\r\n        width === contentContainerSizes.width &&\r\n        height === contentContainerSizes.height\r\n      ) {\r\n        return\r\n      }\r\n\r\n      setContentContainerSizes({ width, height })\r\n    }\r\n    window.onresize()\r\n  }\r\n\r\n  useEffect(setOnWindowResizeEffect, [contentContainerSizes, layout])\r\n\r\n  const resetOnWindowResizeEffect = () => {\r\n    return () => {\r\n      window.onresize = null\r\n    }\r\n  }\r\n\r\n  useEffect(resetOnWindowResizeEffect, [])\r\n\r\n  const fetchLayoutEffect = () => {\r\n    dispatch(fetchLayout())\r\n  }\r\n\r\n  useEffect(fetchLayoutEffect, [dispatch])\r\n\r\n  const fetchScenariosEffect = () => {\r\n    dispatch(fetchScenarios())\r\n  }\r\n\r\n  useEffect(fetchScenariosEffect, [dispatch])\r\n\r\n  const fetchThesaurusEffect = () => {\r\n    dispatch(fetchThesaurus())\r\n  }\r\n\r\n  useEffect(fetchThesaurusEffect, [dispatch])\r\n\r\n  if (!layout || !scenarios) {\r\n    return null\r\n  }\r\n\r\n  const titleFontSize = `${Math.floor(layout.fontSize * GOLDEN_RATIO_BIG)}px`\r\n  const titleLineHeight = `${Math.floor(titleFontSize * GOLDEN_RATIO_BIG)}px`\r\n\r\n  const getWidth = columnsNumber => {\r\n    if (!columnsNumber) {\r\n      return 'auto'\r\n    }\r\n\r\n    const getGutters = columnsNumber => {\r\n      return layout.grid.columnGutter * (columnsNumber - 1)\r\n    }\r\n\r\n    const allGutters = getGutters(layout.grid.columnsNumber)\r\n    const columnWidth =\r\n      (contentContainerSizes.width - allGutters) / layout.grid.columnsNumber\r\n    const gutters = getGutters(columnsNumber)\r\n\r\n    return `${columnWidth * columnsNumber + gutters}px`\r\n  }\r\n\r\n  const getTop = () => {\r\n    if (contentContainerSizes.height === 0) {\r\n      return '0px'\r\n    }\r\n\r\n    return `${Math.round(\r\n      (layout.focusLine * contentContainerSizes.height) / 100\r\n    )}px`\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        ...theme,\r\n        layout: {\r\n          ...layout,\r\n          titleFontSize,\r\n          titleLineHeight,\r\n          getWidth,\r\n          getTop\r\n        }\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <Notification />\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path={routing.ROUTE_ADMIN}>\r\n            <AdminPage />\r\n          </Route>\r\n          <Route path={[routing.ROUTE_ROOT, routing.ROUTE_SCENARIOS]}>\r\n            <ScenariosPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n// import logger from 'redux-logger';\nimport '@fontsource/roboto/400.css'\nimport '@fontsource/roboto/500.css'\n\nimport { rootReducer } from './redux/rootReducer'\n\nimport { App } from './components/App/App'\n\n// const store = createStore(rootReducer, compose(applyMiddleware(thunk, logger)));\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}